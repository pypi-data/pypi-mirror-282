Metadata-Version: 2.1
Name: flask_auto
Version: 0.2.2
Summary: A simple Flask project generator
Home-page: https://github.com/ZeusPod/flask_auto
Author: Jose Luis Morales
Author-email: josseluism@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Flask
Requires-Dist: Flask-SQLAlchemy
Requires-Dist: python-dotenv
Requires-Dist: psycopg2-binary
Requires-Dist: requests

# Flask Auto

Flask Auto es una librerÃ­a para generar proyectos Flask automÃ¡ticamente con una estructura bÃ¡sica de carpetas y archivos, incluyendo soporte para Docker y configuraciÃ³n de base de datos.

## InstalaciÃ³n

Para instalar Flask Auto, usa pip:

```sh
pip install flask_auto

```

## Uso

Para crear un nuevo proyecto Flask, ejecuta el siguiente comando:

```sh
    create_flask_app <project_name> <destination_directory>

```

- <project_name>: Nombre del proyecto.
- <destination_directory>: Directorio donde se crearÃ¡ el proyecto.



## Ejemplo 

Para crear un proyecto llamado my_flask_project en el directorio actual, puedes usar el siguiente comando:

```sh
    create_flask_app my_flask_project .

```

Este comando generara la siguiente estructura de carpetas y archivos

my_flask_project/
â”‚
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ models/
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”œâ”€â”€ views/
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”œâ”€â”€ controllers/
â”‚   â”‚   â””â”€â”€ __init__.py
â”‚   â”œâ”€â”€ templates/
â”‚   â”œâ”€â”€ utils/
â”‚       â””â”€â”€ __init__.py
â”‚
â”œâ”€â”€ venv/
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ run.py
â”œâ”€â”€ .gitignore
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ .dockerignore
â””â”€â”€ .env


Detalles de los Archivos Generados: 

- app/: Contiene la aplicaciÃ³n Flask.

- models/: Carpeta para definir los modelos de la base de datos.

- views/: Carpeta para las vistas de la aplicaciÃ³n.

- controllers/: Carpeta para los controladores de la aplicaciÃ³n.

- templates/: Carpeta para las plantillas HTML.

- utils/: Carpeta para utilidades y funciones auxiliares.

- venv/: Entorno virtual para la instalaciÃ³n de dependencias.

- requirements.txt: Archivo con las dependencias de la aplicaciÃ³n.
- run.py: Script principal para ejecutar la aplicaciÃ³n.

- .gitignore: Archivo para excluir ciertos archivos y carpetas del control de versiones.

- Dockerfile: Archivo de configuraciÃ³n para Docker.
.dockerignore: Archivo para excluir ciertos archivos y carpetas de la imagen de Docker.
- .env: Archivo para variables de entorno, como la configuraciÃ³n de la base de datos.
## EjecuciÃ³n del Proyecto

DespuÃ©s de crear el proyecto, sigue estos pasos para ejecutarlo:

Activa el entorno virtual (si no estÃ¡ ya activado):

En Windows:

``` sh
    my_flask_project\venv\Scripts\activate

```

En macOS o Linux

``` sh
    source my_flask_project/venv/bin/activate
```

Navega al directorio:

cd my_flask_project


### Ejecuta la app: 

python run.py





