# coding: utf-8

"""
    AIForged API

    Integration with AI Forged system  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@aiforged.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftPowerBIApiModelsExport(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'created_date_time': 'datetime',
        'last_action_date_time': 'datetime',
        'report_id': 'str',
        'report_name': 'str',
        'status': 'OneOfMicrosoftPowerBIApiModelsExportStatus',
        'percent_complete': 'int',
        'resource_location': 'str',
        'resource_file_extension': 'str',
        'expiration_time': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'created_date_time': 'createdDateTime',
        'last_action_date_time': 'lastActionDateTime',
        'report_id': 'reportId',
        'report_name': 'reportName',
        'status': 'status',
        'percent_complete': 'percentComplete',
        'resource_location': 'resourceLocation',
        'resource_file_extension': 'ResourceFileExtension',
        'expiration_time': 'expirationTime'
    }

    def __init__(self, id=None, created_date_time=None, last_action_date_time=None, report_id=None, report_name=None, status=None, percent_complete=None, resource_location=None, resource_file_extension=None, expiration_time=None):  # noqa: E501
        """MicrosoftPowerBIApiModelsExport - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._created_date_time = None
        self._last_action_date_time = None
        self._report_id = None
        self._report_name = None
        self._status = None
        self._percent_complete = None
        self._resource_location = None
        self._resource_file_extension = None
        self._expiration_time = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if created_date_time is not None:
            self.created_date_time = created_date_time
        if last_action_date_time is not None:
            self.last_action_date_time = last_action_date_time
        if report_id is not None:
            self.report_id = report_id
        if report_name is not None:
            self.report_name = report_name
        if status is not None:
            self.status = status
        if percent_complete is not None:
            self.percent_complete = percent_complete
        if resource_location is not None:
            self.resource_location = resource_location
        if resource_file_extension is not None:
            self.resource_file_extension = resource_file_extension
        if expiration_time is not None:
            self.expiration_time = expiration_time

    @property
    def id(self):
        """Gets the id of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The id of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MicrosoftPowerBIApiModelsExport.


        :param id: The id of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def created_date_time(self):
        """Gets the created_date_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The created_date_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this MicrosoftPowerBIApiModelsExport.


        :param created_date_time: The created_date_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: datetime
        """

        self._created_date_time = created_date_time

    @property
    def last_action_date_time(self):
        """Gets the last_action_date_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The last_action_date_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: datetime
        """
        return self._last_action_date_time

    @last_action_date_time.setter
    def last_action_date_time(self, last_action_date_time):
        """Sets the last_action_date_time of this MicrosoftPowerBIApiModelsExport.


        :param last_action_date_time: The last_action_date_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: datetime
        """

        self._last_action_date_time = last_action_date_time

    @property
    def report_id(self):
        """Gets the report_id of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The report_id of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: str
        """
        return self._report_id

    @report_id.setter
    def report_id(self, report_id):
        """Sets the report_id of this MicrosoftPowerBIApiModelsExport.


        :param report_id: The report_id of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: str
        """

        self._report_id = report_id

    @property
    def report_name(self):
        """Gets the report_name of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The report_name of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: str
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this MicrosoftPowerBIApiModelsExport.


        :param report_name: The report_name of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: str
        """

        self._report_name = report_name

    @property
    def status(self):
        """Gets the status of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The status of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: OneOfMicrosoftPowerBIApiModelsExportStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MicrosoftPowerBIApiModelsExport.


        :param status: The status of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: OneOfMicrosoftPowerBIApiModelsExportStatus
        """

        self._status = status

    @property
    def percent_complete(self):
        """Gets the percent_complete of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The percent_complete of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: int
        """
        return self._percent_complete

    @percent_complete.setter
    def percent_complete(self, percent_complete):
        """Sets the percent_complete of this MicrosoftPowerBIApiModelsExport.


        :param percent_complete: The percent_complete of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: int
        """

        self._percent_complete = percent_complete

    @property
    def resource_location(self):
        """Gets the resource_location of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The resource_location of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: str
        """
        return self._resource_location

    @resource_location.setter
    def resource_location(self, resource_location):
        """Sets the resource_location of this MicrosoftPowerBIApiModelsExport.


        :param resource_location: The resource_location of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: str
        """

        self._resource_location = resource_location

    @property
    def resource_file_extension(self):
        """Gets the resource_file_extension of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The resource_file_extension of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: str
        """
        return self._resource_file_extension

    @resource_file_extension.setter
    def resource_file_extension(self, resource_file_extension):
        """Sets the resource_file_extension of this MicrosoftPowerBIApiModelsExport.


        :param resource_file_extension: The resource_file_extension of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: str
        """

        self._resource_file_extension = resource_file_extension

    @property
    def expiration_time(self):
        """Gets the expiration_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501


        :return: The expiration_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this MicrosoftPowerBIApiModelsExport.


        :param expiration_time: The expiration_time of this MicrosoftPowerBIApiModelsExport.  # noqa: E501
        :type: datetime
        """

        self._expiration_time = expiration_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftPowerBIApiModelsExport, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftPowerBIApiModelsExport):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
