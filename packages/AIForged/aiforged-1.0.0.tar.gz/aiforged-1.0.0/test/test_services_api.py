# coding: utf-8

"""
    AIForged API

    Integration with AI Forged system  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@aiforged.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.services_api import ServicesApi  # noqa: E501
from swagger_client.rest import ApiException


class TestServicesApi(unittest.TestCase):
    """ServicesApi unit test stubs"""

    def setUp(self):
        self.api = ServicesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_services_change(self):
        """Test case for services_change

        Change a service  # noqa: E501
        """
        pass

    def test_services_create(self):
        """Test case for services_create

        Create a new service  # noqa: E501
        """
        pass

    def test_services_create_charge(self):
        """Test case for services_create_charge

        """
        pass

    def test_services_create_definition_results(self):
        """Test case for services_create_definition_results

        Build definition keys after training  # noqa: E501
        """
        pass

    def test_services_delete_charge(self):
        """Test case for services_delete_charge

        Delete service type charge.  # noqa: E501
        """
        pass

    def test_services_delete_custom_training(self):
        """Test case for services_delete_custom_training

        Delete custom training parameters  # noqa: E501
        """
        pass

    def test_services_find_service_references(self):
        """Test case for services_find_service_references

        Find References to a Service  # noqa: E501
        """
        pass

    def test_services_get(self):
        """Test case for services_get

        Get a service by id  # noqa: E501
        """
        pass

    def test_services_get_charges(self):
        """Test case for services_get_charges

        Get all service types.  You can use a serice interface filter  # noqa: E501
        """
        pass

    def test_services_get_code_constants(self):
        """Test case for services_get_code_constants

        Get code constants  # noqa: E501
        """
        pass

    def test_services_get_custom_training(self):
        """Test case for services_get_custom_training

        Get custom training parameters  # noqa: E501
        """
        pass

    def test_services_get_custom_training_fields(self):
        """Test case for services_get_custom_training_fields

        Get custom training fields  # noqa: E501
        """
        pass

    def test_services_get_events(self):
        """Test case for services_get_events

        Get events for a service  # noqa: E501
        """
        pass

    def test_services_get_related_users(self):
        """Test case for services_get_related_users

        Get related users  # noqa: E501
        """
        pass

    def test_services_get_training_report(self):
        """Test case for services_get_training_report

        Get training report for service  # noqa: E501
        """
        pass

    def test_services_initialize(self):
        """Test case for services_initialize

        Initialize a service  # noqa: E501
        """
        pass

    def test_services_move(self):
        """Test case for services_move

        Move a service to another project  # noqa: E501
        """
        pass

    def test_services_process(self):
        """Test case for services_process

        Process service documents  # noqa: E501
        """
        pass

    def test_services_save_custom_training(self):
        """Test case for services_save_custom_training

        Save custom training  # noqa: E501
        """
        pass

    def test_services_train(self):
        """Test case for services_train

        Train service  # noqa: E501
        """
        pass

    def test_services_update_charge(self):
        """Test case for services_update_charge

        Update service type charge.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
