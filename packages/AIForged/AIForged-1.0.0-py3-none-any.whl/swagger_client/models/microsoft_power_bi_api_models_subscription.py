# coding: utf-8

"""
    AIForged API

    Integration with AI Forged system  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@aiforged.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftPowerBIApiModelsSubscription(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'title': 'str',
        'artifact_id': 'str',
        'artifact_display_name': 'str',
        'sub_artifact_display_name': 'str',
        'artifact_type': 'str',
        'is_enabled': 'bool',
        'frequency': 'str',
        'start_date': 'datetime',
        'end_date': 'datetime',
        'link_to_content': 'bool',
        'preview_image': 'bool',
        'attachment_format': 'str',
        'users': 'list[MicrosoftPowerBIApiModelsSubscriptionUser]'
    }

    attribute_map = {
        'id': 'id',
        'title': 'title',
        'artifact_id': 'artifactId',
        'artifact_display_name': 'artifactDisplayName',
        'sub_artifact_display_name': 'subArtifactDisplayName',
        'artifact_type': 'artifactType',
        'is_enabled': 'isEnabled',
        'frequency': 'frequency',
        'start_date': 'startDate',
        'end_date': 'endDate',
        'link_to_content': 'linkToContent',
        'preview_image': 'previewImage',
        'attachment_format': 'attachmentFormat',
        'users': 'users'
    }

    def __init__(self, id=None, title=None, artifact_id=None, artifact_display_name=None, sub_artifact_display_name=None, artifact_type=None, is_enabled=None, frequency=None, start_date=None, end_date=None, link_to_content=None, preview_image=None, attachment_format=None, users=None):  # noqa: E501
        """MicrosoftPowerBIApiModelsSubscription - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._title = None
        self._artifact_id = None
        self._artifact_display_name = None
        self._sub_artifact_display_name = None
        self._artifact_type = None
        self._is_enabled = None
        self._frequency = None
        self._start_date = None
        self._end_date = None
        self._link_to_content = None
        self._preview_image = None
        self._attachment_format = None
        self._users = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if title is not None:
            self.title = title
        if artifact_id is not None:
            self.artifact_id = artifact_id
        if artifact_display_name is not None:
            self.artifact_display_name = artifact_display_name
        if sub_artifact_display_name is not None:
            self.sub_artifact_display_name = sub_artifact_display_name
        if artifact_type is not None:
            self.artifact_type = artifact_type
        if is_enabled is not None:
            self.is_enabled = is_enabled
        if frequency is not None:
            self.frequency = frequency
        if start_date is not None:
            self.start_date = start_date
        if end_date is not None:
            self.end_date = end_date
        if link_to_content is not None:
            self.link_to_content = link_to_content
        if preview_image is not None:
            self.preview_image = preview_image
        if attachment_format is not None:
            self.attachment_format = attachment_format
        if users is not None:
            self.users = users

    @property
    def id(self):
        """Gets the id of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The id of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MicrosoftPowerBIApiModelsSubscription.


        :param id: The id of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def title(self):
        """Gets the title of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The title of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this MicrosoftPowerBIApiModelsSubscription.


        :param title: The title of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def artifact_id(self):
        """Gets the artifact_id of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The artifact_id of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._artifact_id

    @artifact_id.setter
    def artifact_id(self, artifact_id):
        """Sets the artifact_id of this MicrosoftPowerBIApiModelsSubscription.


        :param artifact_id: The artifact_id of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._artifact_id = artifact_id

    @property
    def artifact_display_name(self):
        """Gets the artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._artifact_display_name

    @artifact_display_name.setter
    def artifact_display_name(self, artifact_display_name):
        """Sets the artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.


        :param artifact_display_name: The artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._artifact_display_name = artifact_display_name

    @property
    def sub_artifact_display_name(self):
        """Gets the sub_artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The sub_artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._sub_artifact_display_name

    @sub_artifact_display_name.setter
    def sub_artifact_display_name(self, sub_artifact_display_name):
        """Sets the sub_artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.


        :param sub_artifact_display_name: The sub_artifact_display_name of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._sub_artifact_display_name = sub_artifact_display_name

    @property
    def artifact_type(self):
        """Gets the artifact_type of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The artifact_type of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._artifact_type

    @artifact_type.setter
    def artifact_type(self, artifact_type):
        """Sets the artifact_type of this MicrosoftPowerBIApiModelsSubscription.


        :param artifact_type: The artifact_type of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._artifact_type = artifact_type

    @property
    def is_enabled(self):
        """Gets the is_enabled of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The is_enabled of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this MicrosoftPowerBIApiModelsSubscription.


        :param is_enabled: The is_enabled of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: bool
        """

        self._is_enabled = is_enabled

    @property
    def frequency(self):
        """Gets the frequency of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The frequency of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this MicrosoftPowerBIApiModelsSubscription.


        :param frequency: The frequency of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._frequency = frequency

    @property
    def start_date(self):
        """Gets the start_date of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The start_date of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this MicrosoftPowerBIApiModelsSubscription.


        :param start_date: The start_date of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The end_date of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this MicrosoftPowerBIApiModelsSubscription.


        :param end_date: The end_date of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: datetime
        """

        self._end_date = end_date

    @property
    def link_to_content(self):
        """Gets the link_to_content of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The link_to_content of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: bool
        """
        return self._link_to_content

    @link_to_content.setter
    def link_to_content(self, link_to_content):
        """Sets the link_to_content of this MicrosoftPowerBIApiModelsSubscription.


        :param link_to_content: The link_to_content of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: bool
        """

        self._link_to_content = link_to_content

    @property
    def preview_image(self):
        """Gets the preview_image of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The preview_image of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: bool
        """
        return self._preview_image

    @preview_image.setter
    def preview_image(self, preview_image):
        """Sets the preview_image of this MicrosoftPowerBIApiModelsSubscription.


        :param preview_image: The preview_image of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: bool
        """

        self._preview_image = preview_image

    @property
    def attachment_format(self):
        """Gets the attachment_format of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The attachment_format of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: str
        """
        return self._attachment_format

    @attachment_format.setter
    def attachment_format(self, attachment_format):
        """Sets the attachment_format of this MicrosoftPowerBIApiModelsSubscription.


        :param attachment_format: The attachment_format of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: str
        """

        self._attachment_format = attachment_format

    @property
    def users(self):
        """Gets the users of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501


        :return: The users of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :rtype: list[MicrosoftPowerBIApiModelsSubscriptionUser]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this MicrosoftPowerBIApiModelsSubscription.


        :param users: The users of this MicrosoftPowerBIApiModelsSubscription.  # noqa: E501
        :type: list[MicrosoftPowerBIApiModelsSubscriptionUser]
        """

        self._users = users

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftPowerBIApiModelsSubscription, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftPowerBIApiModelsSubscription):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
