# coding: utf-8

"""
    AIForged API

    Integration with AI Forged system  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@aiforged.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftPowerBIApiModelsReport(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'name': 'str',
        'dataset_id': 'str',
        'app_id': 'str',
        'description': 'str',
        'report_type': 'str',
        'original_report_id': 'str',
        'is_owned_by_me': 'bool',
        'web_url': 'str',
        'embed_url': 'str',
        'users': 'list[MicrosoftPowerBIApiModelsReportUser]',
        'subscriptions': 'list[MicrosoftPowerBIApiModelsSubscription]'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'dataset_id': 'datasetId',
        'app_id': 'appId',
        'description': 'description',
        'report_type': 'reportType',
        'original_report_id': 'originalReportId',
        'is_owned_by_me': 'isOwnedByMe',
        'web_url': 'webUrl',
        'embed_url': 'embedUrl',
        'users': 'users',
        'subscriptions': 'subscriptions'
    }

    def __init__(self, id=None, name=None, dataset_id=None, app_id=None, description=None, report_type=None, original_report_id=None, is_owned_by_me=None, web_url=None, embed_url=None, users=None, subscriptions=None):  # noqa: E501
        """MicrosoftPowerBIApiModelsReport - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._dataset_id = None
        self._app_id = None
        self._description = None
        self._report_type = None
        self._original_report_id = None
        self._is_owned_by_me = None
        self._web_url = None
        self._embed_url = None
        self._users = None
        self._subscriptions = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if dataset_id is not None:
            self.dataset_id = dataset_id
        if app_id is not None:
            self.app_id = app_id
        if description is not None:
            self.description = description
        if report_type is not None:
            self.report_type = report_type
        if original_report_id is not None:
            self.original_report_id = original_report_id
        if is_owned_by_me is not None:
            self.is_owned_by_me = is_owned_by_me
        if web_url is not None:
            self.web_url = web_url
        if embed_url is not None:
            self.embed_url = embed_url
        if users is not None:
            self.users = users
        if subscriptions is not None:
            self.subscriptions = subscriptions

    @property
    def id(self):
        """Gets the id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MicrosoftPowerBIApiModelsReport.


        :param id: The id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The name of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MicrosoftPowerBIApiModelsReport.


        :param name: The name of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def dataset_id(self):
        """Gets the dataset_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The dataset_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._dataset_id

    @dataset_id.setter
    def dataset_id(self, dataset_id):
        """Sets the dataset_id of this MicrosoftPowerBIApiModelsReport.


        :param dataset_id: The dataset_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._dataset_id = dataset_id

    @property
    def app_id(self):
        """Gets the app_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The app_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this MicrosoftPowerBIApiModelsReport.


        :param app_id: The app_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._app_id = app_id

    @property
    def description(self):
        """Gets the description of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The description of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MicrosoftPowerBIApiModelsReport.


        :param description: The description of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def report_type(self):
        """Gets the report_type of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The report_type of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this MicrosoftPowerBIApiModelsReport.


        :param report_type: The report_type of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._report_type = report_type

    @property
    def original_report_id(self):
        """Gets the original_report_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The original_report_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._original_report_id

    @original_report_id.setter
    def original_report_id(self, original_report_id):
        """Sets the original_report_id of this MicrosoftPowerBIApiModelsReport.


        :param original_report_id: The original_report_id of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._original_report_id = original_report_id

    @property
    def is_owned_by_me(self):
        """Gets the is_owned_by_me of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The is_owned_by_me of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: bool
        """
        return self._is_owned_by_me

    @is_owned_by_me.setter
    def is_owned_by_me(self, is_owned_by_me):
        """Sets the is_owned_by_me of this MicrosoftPowerBIApiModelsReport.


        :param is_owned_by_me: The is_owned_by_me of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: bool
        """

        self._is_owned_by_me = is_owned_by_me

    @property
    def web_url(self):
        """Gets the web_url of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The web_url of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this MicrosoftPowerBIApiModelsReport.


        :param web_url: The web_url of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._web_url = web_url

    @property
    def embed_url(self):
        """Gets the embed_url of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The embed_url of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: str
        """
        return self._embed_url

    @embed_url.setter
    def embed_url(self, embed_url):
        """Sets the embed_url of this MicrosoftPowerBIApiModelsReport.


        :param embed_url: The embed_url of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: str
        """

        self._embed_url = embed_url

    @property
    def users(self):
        """Gets the users of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The users of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: list[MicrosoftPowerBIApiModelsReportUser]
        """
        return self._users

    @users.setter
    def users(self, users):
        """Sets the users of this MicrosoftPowerBIApiModelsReport.


        :param users: The users of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: list[MicrosoftPowerBIApiModelsReportUser]
        """

        self._users = users

    @property
    def subscriptions(self):
        """Gets the subscriptions of this MicrosoftPowerBIApiModelsReport.  # noqa: E501


        :return: The subscriptions of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :rtype: list[MicrosoftPowerBIApiModelsSubscription]
        """
        return self._subscriptions

    @subscriptions.setter
    def subscriptions(self, subscriptions):
        """Sets the subscriptions of this MicrosoftPowerBIApiModelsReport.


        :param subscriptions: The subscriptions of this MicrosoftPowerBIApiModelsReport.  # noqa: E501
        :type: list[MicrosoftPowerBIApiModelsSubscription]
        """

        self._subscriptions = subscriptions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftPowerBIApiModelsReport, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftPowerBIApiModelsReport):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
