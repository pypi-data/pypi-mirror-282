//unique ids for edges and links generated by the network object

template<class T> class UniqueIdGenerator;

template <class T> struct UniqueId 
{
	size_t id;
	explicit UniqueId (size_t i) : id(i) {}
	UniqueId() : id(-1) {}
	inline bool operator==(const UniqueId<T> &other) const
	{
		return (this->id==other.id);
	}
	typedef T indexed_class_type;
};

template <class ID> class IndexedObject
{
public:
	virtual inline ID get_id() const = 0;
};
