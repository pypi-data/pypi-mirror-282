"""
多行注释   所有的代码都要加注释
python中所有的标识符都是以字母、下划线、数字，不能以数字 . 开头
变量值存在在堆内存中  变量之间赋值也只是对堆内存地址的引用复制
栈内存存储变量名  堆内存存储具体常量值  命名空间存储堆内存地址
栈内存引用命名空值中的堆内存地址指向堆内存常量值。
"""
import keyword

# 单行注释 所有的代码都要加注释 增加的程序的可读性！ 尽量不要使用中文作为标识符
if __name__ == '__main__':
    print("注释的出现！")
    # 获取python所有的关键字
    print(keyword.kwlist)

    # 删除指定变量
    num = 100
    print(id(num))  # 获取变量的堆内存地址
    print(id(100))  # 获取常量的堆内存地址
    temp = num
    print(temp)  # 获取临时变量的地址
    """ 
    删除变量值  有两种情况，当某一个变量被删除之后，实际上仅仅是通过命名空间将变量的信息删除了，但是
    此变量所对应的堆内存可能未必会及时删除，那么此时需要考虑两种情况(只删除命名空间的堆内存地址)：
       1、该堆内存地址还存在有其他变量的引用，那么此内存是不会被回收的。
       2、该堆内存的地址已经没有任何变量的引用，则此部分内存将成为无用空间，随后将等待被python虚拟机删除。
     """
    del num
    print(num)

