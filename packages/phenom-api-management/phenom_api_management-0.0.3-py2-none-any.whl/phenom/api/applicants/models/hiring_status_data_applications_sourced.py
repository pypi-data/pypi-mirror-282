# coding: utf-8

"""
    applicants-api

    The Candidate APIs allows you to add, update and delete candidates.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: phenom
"""

import pprint
import re  # noqa: F401

import six

class HiringStatusDataApplicationsSourced(object):
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'job_category': 'str',
        'job_title': 'str',
        'job_location': 'str',
        'job_seq_no': 'str',
        'email': 'str',
        'date_created': 'float',
        'updated_date': 'float'
    }

    attribute_map = {
        'job_category': 'jobCategory',
        'job_title': 'jobTitle',
        'job_location': 'jobLocation',
        'job_seq_no': 'jobSeqNo',
        'email': 'email',
        'date_created': 'dateCreated',
        'updated_date': 'updatedDate'
    }

    def __init__(self, job_category=None, job_title=None, job_location=None, job_seq_no=None, email=None, date_created=None, updated_date=None):  # noqa: E501
        """HiringStatusDataApplicationsSourced - a model defined in Swagger"""  # noqa: E501
        self._job_category = None
        self._job_title = None
        self._job_location = None
        self._job_seq_no = None
        self._email = None
        self._date_created = None
        self._updated_date = None
        self.discriminator = None
        if job_category is not None:
            self.job_category = job_category
        if job_title is not None:
            self.job_title = job_title
        if job_location is not None:
            self.job_location = job_location
        if job_seq_no is not None:
            self.job_seq_no = job_seq_no
        if email is not None:
            self.email = email
        if date_created is not None:
            self.date_created = date_created
        if updated_date is not None:
            self.updated_date = updated_date

    @property
    def job_category(self):
        """Gets the job_category of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The job_category of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: str
        """
        return self._job_category

    @job_category.setter
    def job_category(self, job_category):
        """Sets the job_category of this HiringStatusDataApplicationsSourced.


        :param job_category: The job_category of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: str
        """

        self._job_category = job_category

    @property
    def job_title(self):
        """Gets the job_title of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The job_title of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this HiringStatusDataApplicationsSourced.


        :param job_title: The job_title of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: str
        """

        self._job_title = job_title

    @property
    def job_location(self):
        """Gets the job_location of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The job_location of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: str
        """
        return self._job_location

    @job_location.setter
    def job_location(self, job_location):
        """Sets the job_location of this HiringStatusDataApplicationsSourced.


        :param job_location: The job_location of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: str
        """

        self._job_location = job_location

    @property
    def job_seq_no(self):
        """Gets the job_seq_no of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The job_seq_no of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: str
        """
        return self._job_seq_no

    @job_seq_no.setter
    def job_seq_no(self, job_seq_no):
        """Sets the job_seq_no of this HiringStatusDataApplicationsSourced.


        :param job_seq_no: The job_seq_no of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: str
        """

        self._job_seq_no = job_seq_no

    @property
    def email(self):
        """Gets the email of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The email of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this HiringStatusDataApplicationsSourced.


        :param email: The email of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def date_created(self):
        """Gets the date_created of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The date_created of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: float
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this HiringStatusDataApplicationsSourced.


        :param date_created: The date_created of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: float
        """

        self._date_created = date_created

    @property
    def updated_date(self):
        """Gets the updated_date of this HiringStatusDataApplicationsSourced.  # noqa: E501


        :return: The updated_date of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :rtype: float
        """
        return self._updated_date

    @updated_date.setter
    def updated_date(self, updated_date):
        """Sets the updated_date of this HiringStatusDataApplicationsSourced.


        :param updated_date: The updated_date of this HiringStatusDataApplicationsSourced.  # noqa: E501
        :type: float
        """

        self._updated_date = updated_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HiringStatusDataApplicationsSourced, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HiringStatusDataApplicationsSourced):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
