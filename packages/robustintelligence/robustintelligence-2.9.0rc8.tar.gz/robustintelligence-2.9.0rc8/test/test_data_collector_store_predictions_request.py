# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.data_collector_store_predictions_request import DataCollectorStorePredictionsRequest

class TestDataCollectorStorePredictionsRequest(unittest.TestCase):
    """DataCollectorStorePredictionsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataCollectorStorePredictionsRequest:
        """Test DataCollectorStorePredictionsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataCollectorStorePredictionsRequest`
        """
        model = DataCollectorStorePredictionsRequest()
        if include_optional:
            return DataCollectorStorePredictionsRequest(
                model_id = ri.apiclient.models.uniquely_specifies_a_model/.Uniquely specifies a Model.(),
                predictions = [
                    ri.apiclient.models.rime_store_predictions_request_prediction.rimeStorePredictionsRequestPrediction(
                        datapoint_id = ri.apiclient.models.rime_uuid.rimeUUID(
                            uuid = '', ), 
                        prediction = 'YQ==', )
                    ]
            )
        else:
            return DataCollectorStorePredictionsRequest(
                predictions = [
                    ri.apiclient.models.rime_store_predictions_request_prediction.rimeStorePredictionsRequestPrediction(
                        datapoint_id = ri.apiclient.models.rime_uuid.rimeUUID(
                            uuid = '', ), 
                        prediction = 'YQ==', )
                    ],
        )
        """

    def testDataCollectorStorePredictionsRequest(self):
        """Test DataCollectorStorePredictionsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()