[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True

[mypy]
python_version = 3.11
plugins = pydantic.mypy
warn_unused_configs = True
disallow_subclassing_any = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_return_any = True
warn_unused_ignores = True
disallow_untyped_decorators = True

[flake8]
max-line-length = 120
ignore = W191, W503, F401, E203
exclude = 
	__pycache__,
	build,
	dist,
	.pytest_cache,
	.mypy_cache,

[tool:pytest]
testpaths = tests

[pylint.master]
extension-pkg-whitelist = 
fail-under = 10
ignore = CVS
ignore-patterns = 
jobs = 0
limit-inference-results = 100
load-plugins = 
persistent = yes
suggestion-mode = yes
unsafe-load-any-extension = no

[pylint.messages_control]
confidence = 
disable = too-few-public-methods,
	line-too-long,
	no-name-in-module,
	no-member,
enable = c-extension-no-member

[pylint.reports]
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
output-format = text
reports = no
score = no

[pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = sys.exit

[pylint.variables]
additional-builtins = 
allow-global-unused-variables = yes
callbacks = cb_,
	_cb
dummy-variables-rgx = _+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_
ignored-argument-names = _.*|^ignored_|^unused_
init-import = no
redefining-builtins-modules = six.moves,past.builtins,future.builtins,builtins,io

[pylint.miscellaneous]
notes = FIXME,
	XXX,
	TODO

[pylint.typecheck]
contextmanager-decorators = contextlib.contextmanager
generated-members = 
ignore-mixin-members = yes
ignore-none = yes
ignore-on-opaque-inference = yes
ignored-classes = optparse.Values,thread._local,_thread._local
ignored-modules = 
missing-member-hint = yes
missing-member-hint-distance = 1
missing-member-max-choices = 1
signature-mutators = 

[pylint.basic]
argument-naming-style = snake_case
attr-naming-style = snake_case
bad-names = foo,
	bar,
	baz,
	toto,
	tutu,
	tata
bad-names-rgxs = 
class-attribute-naming-style = any
class-naming-style = PascalCase
const-naming-style = UPPER_CASE
docstring-min-length = 3
function-naming-style = snake_case
good-names = a,
	b,
	c,
	d,
	e,
	f,
	g,
	h,
	i,
	j,
	k,
	x,
	_,
	op,
	id,
	F,
	G,
	H,
	T,
good-names-rgxs = 
include-naming-hint = no
inlinevar-naming-style = any
method-naming-style = snake_case
module-naming-style = snake_case
name-group = 
no-docstring-rgx = ^_
property-classes = abc.abstractproperty
variable-naming-style = snake_case

[pyint.spelling]
max-spelling-suggestions = 4
spelling-dict = 
spelling-ignore-words = 
spelling-private-dict-file = 
spelling-store-unknown-words = no

[pylint.format]
expected-line-ending-format = 
ignore-long-lines = ^\s*(# )?<?https?://\S+>?$
indent-after-paren = 4
indent-string = "    "
max-line-length = 88
max-module-lines = 1000
single-line-class-stmt = no
single-line-if-stmt = no

[pylint.similarities]
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = yes
min-similarity-lines = 4

[pylint.string]
check-quote-consistency = no
check-str-concat-over-line-jumps = no

[pylint.logging]
logging-format-style = old
logging-modules = logging

[pylint.design]
max-args = 5
max-attributes = 15
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 10
max-statements = 50
min-public-methods = 2

[imports]
allow-any-import-level = 
allow-wildcard-with-all = no
analyse-fallback-blocks = no
deprecated-modules = optparse,tkinter.tix
ext-import-graph = 
import-graph = 
int-import-graph = 
known-standard-library = 
known-third-party = enchant
preferred-modules = 

[pylint.classes]
defining-attr-methods = __init__,
	__new__,
	setUp,
	__post_init__
exclude-protected = _asdict,
	_fields,
	_replace,
	_source,
	_make
valid-classmethod-first-arg = cls
valid-metaclass-classmethod-first-arg = cls

[pylint.exceptions]
overgeneral-exceptions = builtins.BaseException,
	builtins.Exception

[egg_info]
tag_build = 
tag_date = 0

