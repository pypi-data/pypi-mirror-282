# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import uqrng_pb2 as uqrng__pb2


class UqrngServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEntropy = channel.unary_stream(
                '/uqrng.UqrngService/GetEntropy',
                request_serializer=uqrng__pb2.RngInput.SerializeToString,
                response_deserializer=uqrng__pb2.RngOutput.FromString,
                )
        self.GetNoise = channel.unary_stream(
                '/uqrng.UqrngService/GetNoise',
                request_serializer=uqrng__pb2.NoiseInput.SerializeToString,
                response_deserializer=uqrng__pb2.NoiseOutput.FromString,
                )
        self.HealthTest = channel.unary_unary(
                '/uqrng.UqrngService/HealthTest',
                request_serializer=uqrng__pb2.Empty.SerializeToString,
                response_deserializer=uqrng__pb2.StatusOutput.FromString,
                )
        self.FetchHealthTest = channel.unary_unary(
                '/uqrng.UqrngService/FetchHealthTest',
                request_serializer=uqrng__pb2.Empty.SerializeToString,
                response_deserializer=uqrng__pb2.HealthTestOutput.FromString,
                )
        self.SystemStatus = channel.unary_unary(
                '/uqrng.UqrngService/SystemStatus',
                request_serializer=uqrng__pb2.Empty.SerializeToString,
                response_deserializer=uqrng__pb2.StatusOutput.FromString,
                )
        self.ScheduleHealthTest = channel.unary_unary(
                '/uqrng.UqrngService/ScheduleHealthTest',
                request_serializer=uqrng__pb2.ScheduleInput.SerializeToString,
                response_deserializer=uqrng__pb2.StatusOutput.FromString,
                )
        self.SystemInfo = channel.unary_unary(
                '/uqrng.UqrngService/SystemInfo',
                request_serializer=uqrng__pb2.Empty.SerializeToString,
                response_deserializer=uqrng__pb2.SystemOutput.FromString,
                )


class UqrngServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEntropy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNoise(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchHealthTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScheduleHealthTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UqrngServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEntropy': grpc.unary_stream_rpc_method_handler(
                    servicer.GetEntropy,
                    request_deserializer=uqrng__pb2.RngInput.FromString,
                    response_serializer=uqrng__pb2.RngOutput.SerializeToString,
            ),
            'GetNoise': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNoise,
                    request_deserializer=uqrng__pb2.NoiseInput.FromString,
                    response_serializer=uqrng__pb2.NoiseOutput.SerializeToString,
            ),
            'HealthTest': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthTest,
                    request_deserializer=uqrng__pb2.Empty.FromString,
                    response_serializer=uqrng__pb2.StatusOutput.SerializeToString,
            ),
            'FetchHealthTest': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchHealthTest,
                    request_deserializer=uqrng__pb2.Empty.FromString,
                    response_serializer=uqrng__pb2.HealthTestOutput.SerializeToString,
            ),
            'SystemStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemStatus,
                    request_deserializer=uqrng__pb2.Empty.FromString,
                    response_serializer=uqrng__pb2.StatusOutput.SerializeToString,
            ),
            'ScheduleHealthTest': grpc.unary_unary_rpc_method_handler(
                    servicer.ScheduleHealthTest,
                    request_deserializer=uqrng__pb2.ScheduleInput.FromString,
                    response_serializer=uqrng__pb2.StatusOutput.SerializeToString,
            ),
            'SystemInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemInfo,
                    request_deserializer=uqrng__pb2.Empty.FromString,
                    response_serializer=uqrng__pb2.SystemOutput.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'uqrng.UqrngService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UqrngService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEntropy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/uqrng.UqrngService/GetEntropy',
            uqrng__pb2.RngInput.SerializeToString,
            uqrng__pb2.RngOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNoise(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/uqrng.UqrngService/GetNoise',
            uqrng__pb2.NoiseInput.SerializeToString,
            uqrng__pb2.NoiseOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uqrng.UqrngService/HealthTest',
            uqrng__pb2.Empty.SerializeToString,
            uqrng__pb2.StatusOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchHealthTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uqrng.UqrngService/FetchHealthTest',
            uqrng__pb2.Empty.SerializeToString,
            uqrng__pb2.HealthTestOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SystemStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uqrng.UqrngService/SystemStatus',
            uqrng__pb2.Empty.SerializeToString,
            uqrng__pb2.StatusOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScheduleHealthTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uqrng.UqrngService/ScheduleHealthTest',
            uqrng__pb2.ScheduleInput.SerializeToString,
            uqrng__pb2.StatusOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SystemInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uqrng.UqrngService/SystemInfo',
            uqrng__pb2.Empty.SerializeToString,
            uqrng__pb2.SystemOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
