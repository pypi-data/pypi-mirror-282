# coding: utf-8

"""
    Anch.io

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Contact: opensource@anchio.app
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from async_anchio.models.slack_channel import SlackChannel

class TestSlackChannel(unittest.TestCase):
    """SlackChannel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SlackChannel:
        """Test SlackChannel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SlackChannel`
        """
        model = SlackChannel()
        if include_optional:
            return SlackChannel(
                id = '',
                name = '',
                is_channel = True,
                is_group = True,
                is_im = True,
                created = 56,
                creator = '',
                is_archived = True,
                is_general = True,
                unlinked = 56,
                name_normalized = '',
                is_shared = True,
                is_ext_shared = True,
                is_org_shared = True,
                pending_shared = [
                    ''
                    ],
                is_pending_ext_shared = True,
                is_member = True,
                is_private = True,
                is_mpim = True,
                updated = 56,
                topic = async_anchio.models.slack_channel_topic.SlackChannelTopic(
                    value = '', 
                    creator = '', 
                    last_set = 56, ),
                purpose = async_anchio.models.slack_channel_purpose.SlackChannelPurpose(
                    value = '', 
                    creator = '', 
                    last_set = 56, ),
                previous_names = [
                    ''
                    ],
                num_members = 56
            )
        else:
            return SlackChannel(
                id = '',
                name = '',
                is_channel = True,
                is_group = True,
                is_im = True,
                created = 56,
                creator = '',
                is_archived = True,
                is_general = True,
                unlinked = 56,
                name_normalized = '',
                is_shared = True,
                is_ext_shared = True,
                is_org_shared = True,
                pending_shared = [
                    ''
                    ],
                is_pending_ext_shared = True,
                is_member = True,
                is_private = True,
                is_mpim = True,
                updated = 56,
                topic = async_anchio.models.slack_channel_topic.SlackChannelTopic(
                    value = '', 
                    creator = '', 
                    last_set = 56, ),
                purpose = async_anchio.models.slack_channel_purpose.SlackChannelPurpose(
                    value = '', 
                    creator = '', 
                    last_set = 56, ),
                previous_names = [
                    ''
                    ],
                num_members = 56,
        )
        """

    def testSlackChannel(self):
        """Test SlackChannel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
