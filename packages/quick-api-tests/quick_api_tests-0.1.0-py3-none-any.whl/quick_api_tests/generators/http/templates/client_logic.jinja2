# coding: utf-8
{%- set service_name = service_name %}
"""
    {{ service_name|to_snake_case }}

    Generated by quick https://github.com/ValeriyMenshikov/quick)

"""  # noqa: E501
{%- set api_name = api_name %}
from clients.http.{{ service_name|to_snake_case }} import {{ api_name|to_camel_case }}Api


class {{ api_name|to_camel_case }}ApiLogic({{ api_name|to_camel_case }}Api):
    """
    Класс наследуется от сгенерированного класса API клиента.

    В этом классе необходимо реализовывать логику ваших методов,
    она не потеряется при перегенерации клиентов.

    Здесь можно реализовать обертки над методами упрощая их интерфейс

    Пример:

    def wrapper_method_name(self, param1: int, param2: str, param3: bool) -> Response:
        request = ModelName(
            param1=param1,
            param2=param2,
            param3=param3
        )
        response = self.post_method_name(
            request=request
        )
        return response
    """