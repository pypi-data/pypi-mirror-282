Metadata-Version: 2.1
Name: etched-blitz
Version: 0.0.1.dev1
Summary: A high-throughput and memory-efficient inference and serving engine for LLMs
Home-page: https://github.com/etched-ai/blitz
Author: Etched Team
License: Apache 2.0
Project-URL: Homepage, https://github.com/etched-ai/blitz
Project-URL: Documentation, https://etched-ai.github.io/blitz/
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cmake >=3.21
Requires-Dist: ninja
Requires-Dist: psutil
Requires-Dist: sentencepiece
Requires-Dist: numpy <2.0.0
Requires-Dist: requests
Requires-Dist: tqdm
Requires-Dist: py-cpuinfo
Requires-Dist: transformers >=4.40.0
Requires-Dist: tokenizers >=0.19.1
Requires-Dist: fastapi
Requires-Dist: aiohttp
Requires-Dist: openai
Requires-Dist: uvicorn[standard]
Requires-Dist: pydantic >=2.0
Requires-Dist: pillow
Requires-Dist: prometheus-client >=0.18.0
Requires-Dist: prometheus-fastapi-instrumentator >=7.0.0
Requires-Dist: tiktoken >=0.6.0
Requires-Dist: lm-format-enforcer ==0.10.1
Requires-Dist: outlines >=0.0.43
Requires-Dist: typing-extensions
Requires-Dist: filelock >=3.10.4
Requires-Dist: triton >=2.2.0
Requires-Dist: torch ==2.3.1+cpu ; platform_machine != "ppc64le"
Requires-Dist: torchvision ==0.18.1+cpu ; platform_machine != "ppc64le"
Provides-Extra: tensorizer
Requires-Dist: tensorizer >=2.9.0 ; extra == 'tensorizer'

<p align="center">
  <picture>
    <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/vllm-project/vllm/main/docs/source/assets/logos/vllm-logo-text-dark.png">
    <img alt="vLLM" src="https://raw.githubusercontent.com/vllm-project/vllm/main/docs/source/assets/logos/vllm-logo-text-light.png" width=55%>
  </picture>
</p>

<h3 align="center">
Easy, fast, and cheap LLM serving for everyone
</h3>

<p align="center">
| <a href="https://docs.vllm.ai"><b>Documentation</b></a> | <a href="https://vllm.ai"><b>Blog</b></a> | <a href="https://arxiv.org/abs/2309.06180"><b>Paper</b></a> | <a href="https://discord.gg/jz7wjKhh6g"><b>Discord</b></a> |

</p>

# Blitz-specific Stuff
## Docs
Docs are hosted at [https://etched-ai.github.io/blitz/intro.html](https://etched-ai.github.io/blitz/intro.html). To make changes, add new or make new notebooks/md files inside [docs/blitz-notebook-docs](https://github.com/etched-ai/blitz/tree/main/docs/blitz-notebook-docs). When you open a PR, it will automatically get deployed to https://etched-ai.github.io/blitz/_branch/YOUR_BRANCH_NAME/index.html. When you merge it into main it will get automatically deployed to the main page.

If you make a `.ipynb` file, it will automatically add a "Run in Colab" and "Run in JupyterHub" button that will run that notebook in colab. If you want to make that run a custom notebook, then in the top of the first cell (must be markdown), add the following:
````
```{eval-rst}
:colab-url: https://github.com/etched-ai/blitz/blob/main/path/to/your/file
:github-url: https://github.com/etched-ai/blitz/blob/main/path/to/your/file
```
````
The URLs can be whatever you want.

**Please** make sure that any changes you make update or create relevant documentation. We emphasize keeping docs up to date and very detailed. Good DX starts with good docs and we aim to provide world-class DX to anyone using Blitz.

## Google Colab
We are running a custom Colab backend on a GCP VM (eventually this will be on our own servers). To give people access to our Colab runtime, add them as a `Service Account User` under the `Blitz Colab Access` service account.

### Server Structure
Google Colab only allows you to connect to a custom GCE VM as a runtime. Our solution is to establish a proxy from our VM to colab using Google's official tunnel docker container. You can get this by creating a GCE Colab VM from Google's marketplace then copying over the proxy container. It will establish a socket from the VM to Colab and direct any requests from colab to an port-forwarding address.

Then, we have a `forwarding-rule` on GCP that forwards requests directed to it to our second VM that is running the jupyter server (this is the one that will be switched to our own servers). It receives requests from the proxy from the first VM, then forwards them to `127.0.0.1:8080`, which is the port exposed to a docker container running the jupyter server.

## vLLM Merging
There is a remote called `vllm` which points to [vLLM's public repository](https://github.com/vllm-project/vllm). If you ever need to bring Blitz up to date with it, simply pull from it and rebase.

---

**Ray Summit CPF is Open (June 4th to June 20th)!**

There will be a track for vLLM at the Ray Summit (09/30-10/02, SF) this year!
If you have cool projects related to vLLM or LLM inference, we would love to see your proposals.
This will be a great chance for everyone in the community to get together and learn.
Please submit your proposal [here](https://raysummit.anyscale.com/flow/anyscale/raysummit2024/landing/page/eventsite)

---

*Latest News* ðŸ”¥
- [2024/06] We hosted [the fourth vLLM meetup](https://lu.ma/agivllm) with Cloudflare and BentoML! Please find the meetup slides [here](https://docs.google.com/presentation/d/1iJ8o7V2bQEi0BFEljLTwc5G1S10_Rhv3beed5oB0NJ4/edit?usp=sharing).
- [2024/04] We hosted [the third vLLM meetup](https://robloxandvllmmeetup2024.splashthat.com/) with Roblox! Please find the meetup slides [here](https://docs.google.com/presentation/d/1A--47JAK4BJ39t954HyTkvtfwn0fkqtsL8NGFuslReM/edit?usp=sharing).
- [2024/01] We hosted [the second vLLM meetup](https://lu.ma/ygxbpzhl) in SF! Please find the meetup slides [here](https://docs.google.com/presentation/d/12mI2sKABnUw5RBWXDYY-HtHth4iMSNcEoQ10jDQbxgA/edit?usp=sharing).
- [2024/01] Added ROCm 6.0 support to vLLM.
- [2023/12] Added ROCm 5.7 support to vLLM.
- [2023/10] We hosted [the first vLLM meetup](https://lu.ma/first-vllm-meetup) in SF! Please find the meetup slides [here](https://docs.google.com/presentation/d/1QL-XPFXiFpDBh86DbEegFXBXFXjix4v032GhShbKf3s/edit?usp=sharing).
- [2023/09] We created our [Discord server](https://discord.gg/jz7wjKhh6g)! Join us to discuss vLLM and LLM serving! We will also post the latest announcements and updates there.
- [2023/09] We released our [PagedAttention paper](https://arxiv.org/abs/2309.06180) on arXiv!
- [2023/08] We would like to express our sincere gratitude to [Andreessen Horowitz](https://a16z.com/2023/08/30/supporting-the-open-source-ai-community/) (a16z) for providing a generous grant to support the open-source development and research of vLLM.
- [2023/07] Added support for LLaMA-2! You can run and serve 7B/13B/70B LLaMA-2s on vLLM with a single command!
- [2023/06] Serving vLLM On any Cloud with SkyPilot. Check out a 1-click [example](https://github.com/skypilot-org/skypilot/blob/master/llm/vllm) to start the vLLM demo, and the [blog post](https://blog.skypilot.co/serving-llm-24x-faster-on-the-cloud-with-vllm-and-skypilot/) for the story behind vLLM development on the clouds.
- [2023/06] We officially released vLLM! FastChat-vLLM integration has powered [LMSYS Vicuna and Chatbot Arena](https://chat.lmsys.org) since mid-April. Check out our [blog post](https://vllm.ai).

## About
vLLM is a fast and easy-to-use library for LLM inference and serving.

vLLM is fast with:

- State-of-the-art serving throughput
- Efficient management of attention key and value memory with **PagedAttention**
- Continuous batching of incoming requests
- Fast model execution with CUDA/HIP graph
- Quantization: [GPTQ](https://arxiv.org/abs/2210.17323), [AWQ](https://arxiv.org/abs/2306.00978), [SqueezeLLM](https://arxiv.org/abs/2306.07629), FP8 KV Cache
- Optimized CUDA kernels

vLLM is flexible and easy to use with:

- Seamless integration with popular Hugging Face models
- High-throughput serving with various decoding algorithms, including *parallel sampling*, *beam search*, and more
- Tensor parallelism support for distributed inference
- Streaming outputs
- OpenAI-compatible API server
- Support NVIDIA GPUs, AMD GPUs, Intel CPUs and GPUs
- (Experimental) Prefix caching support
- (Experimental) Multi-lora support

vLLM seamlessly supports most popular open-source models on HuggingFace, including:
- Transformer-like LLMs (e.g., Llama)
- Mixture-of-Expert LLMs (e.g., Mixtral)
- Multi-modal LLMs (e.g., LLaVA)

Find the full list of supported models [here](https://docs.vllm.ai/en/latest/models/supported_models.html).

## Getting Started

Install vLLM with pip or [from source](https://vllm.readthedocs.io/en/latest/getting_started/installation.html#build-from-source):

```bash
pip install vllm
```

Visit our [documentation](https://vllm.readthedocs.io/en/latest/) to learn more.
- [Installation](https://vllm.readthedocs.io/en/latest/getting_started/installation.html)
- [Quickstart](https://vllm.readthedocs.io/en/latest/getting_started/quickstart.html)
- [Supported Models](https://vllm.readthedocs.io/en/latest/models/supported_models.html)

## Contributing

We welcome and value any contributions and collaborations.
Please check out [CONTRIBUTING.md](./CONTRIBUTING.md) for how to get involved.

## Sponsors

vLLM is a community project. Our compute resources for development and testing are supported by the following organizations. Thank you for your support!

<!-- Note: Please sort them in alphabetical order. -->
<!-- Note: Please keep these consistent with docs/source/community/sponsors.md -->

- a16z
- AMD
- Anyscale
- AWS
- Crusoe Cloud
- Databricks
- DeepInfra
- Dropbox
- Lambda Lab
- NVIDIA
- Replicate
- Roblox
- RunPod
- Sequoia Capital
- Trainy
- UC Berkeley
- UC San Diego
- ZhenFund

We also have an official fundraising venue through [OpenCollective](https://opencollective.com/vllm). We plan to use the fund to support the development, maintenance, and adoption of vLLM.

## Citation

If you use vLLM for your research, please cite our [paper](https://arxiv.org/abs/2309.06180):
```bibtex
@inproceedings{kwon2023efficient,
  title={Efficient Memory Management for Large Language Model Serving with PagedAttention},
  author={Woosuk Kwon and Zhuohan Li and Siyuan Zhuang and Ying Sheng and Lianmin Zheng and Cody Hao Yu and Joseph E. Gonzalez and Hao Zhang and Ion Stoica},
  booktitle={Proceedings of the ACM SIGOPS 29th Symposium on Operating Systems Principles},
  year={2023}
}
```
