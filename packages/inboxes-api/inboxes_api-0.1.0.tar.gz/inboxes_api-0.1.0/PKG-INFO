Metadata-Version: 2.1
Name: inboxes-api
Version: 0.1.0
Summary: Simple wrapper over https://inboxes.com API, for generating and work with temporary emails
License: MIT
Author: grehban
Author-email: maximfeedback19@gmail.com
Requires-Python: >=3.11,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Communications :: Chat
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Dist: aiodns (>=3.2.0,<4.0.0)
Requires-Dist: aiohttp (>=3.9.5,<4.0.0)
Requires-Dist: black (>=24.4.2,<25.0.0)
Requires-Dist: certifi (>=2024.6.2,<2025.0.0)
Requires-Dist: isort (>=5.13.2,<6.0.0)
Requires-Dist: mypy (>=1.10.1,<2.0.0)
Requires-Dist: pydantic (>=2.7.4,<3.0.0)
Requires-Dist: types-ujson (>=5.10.0.20240515,<6.0.0.0)
Requires-Dist: ujson (>=5.10.0,<6.0.0)
Description-Content-Type: text/markdown

**INBOXES_API** Simple wrapper over https://inboxes.com API, for generating and work with temporary emails

***Example***

```python
import asyncio
import os

from inboxes_api import InboxesClient


async def main():
    
    example_email = "example@example.com"
    
    client = InboxesClient(access_token=os.environ["INBOXES_ACCESS_TOKEN"])
    
    await client.create_inbox(email=example_email)
    
    email_messages_previews = await client.get_messages(email=example_email)
    
    for message_preview in email_messages_previews:
        message = await client.get_message(message_id=message_preview.id)
        
        sender = message.sender
        reciever = message.reciever
        subject = message.subject
        created_at = message.created_at
        text = message.text
    
    await client.delete_inbox(email=example_email)


if __name__ == "__main__":
    asyncio.run(main())
```
