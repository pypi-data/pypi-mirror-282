Metadata-Version: 2.1
Name: rj-type-hint-checker
Version: 0.0.0
Summary: a rough equivilent of isinstance that works with type hints
Author: RJ_Infinity
License: MIT License
        
        Copyright (c) 2024 RJ_Infinity
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/RJ-Infinity/type_hint_checker
Project-URL: Documentation, https://github.com/RJ-Infinity/type_hint_checker
Project-URL: Repository, https://github.com/RJ-Infinity/type_hint_checker
Project-URL: Issues, https://github.com/RJ-Infinity/type_hint_checker/issues
Keywords: isinstance,type hints,types
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE

# Type Hint Checker

a replacement for isinstance that works with type hints

exports `are_type_compatible` which can be used as a drop in replacement for isinstance
but works with type hints

```py
are_type_compatible([0, 1, 2], list[int]) # true
are_type_compatible([0, 1, "2"], list[int]) # false
```


also takes two optional arguments the context which would be the function or class the
type hint came from and the namespace which is the namespace to search for types
