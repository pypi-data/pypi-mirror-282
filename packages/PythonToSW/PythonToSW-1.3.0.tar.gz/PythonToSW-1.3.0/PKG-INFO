Metadata-Version: 2.1
Name: PythonToSW
Version: 1.3.0
Summary: A package that allows you to create addons in Stormworks with Python, handled through HTTP.
Author: Cuh4
License: Apache License 2.0
Project-URL: Source code, https://github.com/Cuh4/PythonToSW
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyperclip
Requires-Dist: requests
Requires-Dist: urllib3
Requires-Dist: uuid
Requires-Dist: xmltodict
Requires-Dist: flask
Requires-Dist: colorama

# ‚öôÔ∏è | PythonToSW

## üìö | Overview
A Python package that allows you to create basic addons in Stormworks: Build and Rescue with Python.

```python
import time
import PythonToSW as PTS

addon = PTS.Addon(addonName = "My Python Addon", port = 7800)

def main():
    # Every 5 seconds, send a message to everyone
    while True:
        time.sleep(5)

        addon.execute(
            PTS.Announce("Server", "Hello World", -1)
        )

addon.start(target = main) # Start the addon. This automatically creates an addon and places it in your Stormworks' addon directory, so you can easily use the addon in a save
```

## ‚öôÔ∏è | Installing this package
- Use `pip install PythonToSW --upgrade`
- Import the package with `import PythonToSW as PTS` in your code

## üòî | Quirks
- Noticeable delays. This project works through HTTP instead of converting Python code to Lua code, and HTTP is unfortunately slow.
- For your addon to function, the host of the server must run the Python script behind your addon. Closing the Python script will essentially stop the addon.
- No support for `property.slider` and `property.checkbox` as of now.

## ‚ú® | Credit
- **Cuh4** ([GitHub](https://github.com/Cuh4)) 
