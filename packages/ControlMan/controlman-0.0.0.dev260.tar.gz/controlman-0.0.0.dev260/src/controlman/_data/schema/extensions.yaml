$schema: https://json-schema.org/draft/2020-12/schema
title: Extensions
description: >-
  An array of extension definitions for files in the repository's control center,
  ordered by priority (highest first).
type: array
default: []
uniqueItems: true
items:
  description: An extension for a specific file in the control center.
  type: object
  additionalProperties: false
  properties:
    type:
      description: >-
        The file in the control center to extend, defined by its relative path
        from the root of the control center, excluding the file extension.
        As an exception, tool configuration files under `package_python/tools` are
        all defined by the same extension, `package_python/tools`.
      type: string
      enum:
        - project/credits
        - project/intro
        - project/license
        - dev/branch
        - dev/changelog
        - dev/commit
        - dev/discussion
        - dev/issue
        - dev/label
        - dev/maintainer
        - dev/pull
        - dev/repo
        - dev/tag
        - dev/workflow
        - package_python/build
        - package_python/build_tests
        - package_python/conda
        - package_python/dev_config
        - package_python/docs
        - package_python/entry_points
        - package_python/metadata
        - package_python/requirements
        - package_python/tools
        - ui/health_files
        - ui/readme
        - ui/theme
        - ui/web
    repo:
      description: >-
        The fullname of the target GitHub repository to retrieve the extension file from.
        The fullname has the form `OWNER-USERNAME/REPOSITORY-NAME`,
        e.g., `RepoDynamics/PyPackIT`.
      type: string
      pattern: ^[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+$
    ref:
      description: >-
        A Git reference (e.g., branch, tag, or commit hash) in the target repository
        to retrieve the extension file from.
        If not specified, the latest commit on the default branch
        of the target repository is used as the reference.
      type: string
    path:
      description: >-
        The path to the extension file in the target repository,
        relative to the root of the repository.
      type: string
    append_list:
      description: >-
        Whether to append the elements of the arrays (aka lists)
        present in the extended content to the corresponding existing arrays
        present in higher-priority content.
        If set to false, any array that has a corresponding existing array
        in higher-priority content will be treated as a duplicate
        (see raise_duplicate below).
      type: boolean
      default: true
    append_dict:
      description: >-
        Whether to append the key-value pairs of the objects (aka dictionaries)
        present in the extended content to the corresponding existing objects
        present in higher-priority content.
        If set to false, any object that has a corresponding existing object
        in higher-priority content will be treated as a duplicate
        (see raise_duplicate below).
      type: boolean
      default: true
    raise_duplicate:
      description: >-
        Whether to raise an error if any element (i.e., object, array, string, etc.)
        in the extended content is already set in a higher-priority content.
        If set to false, the duplicates will be simply ignored.
      type: boolean
      default: false
  required: [ type, repo, path, append_list, append_dict, raise_duplicate ]
