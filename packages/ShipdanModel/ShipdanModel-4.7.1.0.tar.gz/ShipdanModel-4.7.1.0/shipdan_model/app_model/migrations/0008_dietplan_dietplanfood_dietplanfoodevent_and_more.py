# Generated by Django 4.2.3 on 2023-11-22 05:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("app_model", "0007_diagnosis_big_change"),
    ]

    operations = [
        migrations.CreateModel(
            name="DietPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_day_diet_id",
                    models.IntegerField(
                        default=None, help_text="백필용 필드. 배포 후 삭제될 예정", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diet_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "diet_dietplan",
            },
        ),
        migrations.CreateModel(
            name="DietPlanFood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_diet_food_id",
                    models.IntegerField(
                        default=None, help_text="백필용 필드. 배포 후 삭제될 예정", null=True
                    ),
                ),
                ("day", models.IntegerField(help_text="1일차 = 0")),
                (
                    "meal",
                    models.IntegerField(
                        choices=[(0, "미정"), (1, "아침"), (2, "점심"), (3, "저녁"), (4, "간식")],
                        default=0,
                    ),
                ),
                ("count", models.IntegerField(default=1)),
                ("in_diet", models.BooleanField(default=True)),
                ("in_cart", models.BooleanField(default=True)),
                ("is_recommended", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "diet_plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="foods",
                        to="app_model.dietplan",
                    ),
                ),
                (
                    "food_product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="diet_plan_foods",
                        to="app_model.foodproduct",
                    ),
                ),
                (
                    "prev_replacement",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="next_replacements",
                        to="app_model.dietplanfood",
                    ),
                ),
            ],
            options={
                "db_table": "diet_dietplanfood",
            },
        ),
        migrations.CreateModel(
            name="DietPlanFoodEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "backfill_id",
                    models.IntegerField(
                        default=None, help_text="배포 백필 후 삭제", null=True
                    ),
                ),
                ("code", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diet_plan_food_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "diet_dietplanfoodevent",
            },
        ),
        migrations.CreateModel(
            name="FoodProductOrderLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("limit", models.IntegerField(default=None, null=True)),
                (
                    "ordered_count",
                    models.IntegerField(
                        default=0, help_text="start, end 사이에 결제된 식품 수량"
                    ),
                ),
                ("apply_at", models.DateTimeField(help_text="적용 시점")),
                ("start_at", models.DateTimeField(help_text="유저 주문 수량 적용 시점(start)")),
                ("end_at", models.DateTimeField(help_text="유저 주문 수량 적용 시점(end)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "food_product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_limit",
                        to="app_model.foodproduct",
                    ),
                ),
            ],
            options={
                "db_table": "oms_foodproductorderlimit",
            },
        ),
        migrations.CreateModel(
            name="FoodProductOrderLimitRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "미정"), (1, "요청 중"), (2, "적용 완료"), (3, "수정됨")],
                        default=0,
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        default=None, help_text="적용될 주문 제한 수량", null=True
                    ),
                ),
                ("apply_at", models.DateTimeField(help_text="적용 시점")),
                ("start_at", models.DateTimeField(help_text="유저 주문 수량 적용 시점(start)")),
                ("end_at", models.DateTimeField(help_text="유저 주문 수량 적용 시점(end)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "limit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="app_model.foodproductorderlimit",
                    ),
                ),
            ],
            options={
                "db_table": "oms_foodproductorderlimitrequest",
            },
        ),
        migrations.AlterField(
            model_name="productexceptday",
            name="day",
            field=models.IntegerField(help_text="0: 배송예정일 기준 1일차", unique=True),
        ),
        migrations.CreateModel(
            name="UserDislikeCategoryLayerParameterLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.IntegerField(
                        choices=[(0, "미정"), (1, "설정"), (-1, "해제")], default=0
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_logs",
                        to="app_model.dislikecategorylayerparameter",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dislike_category_layer_parameter_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "health_userdislikecategorylayerparamegerlog",
            },
        ),
        migrations.CreateModel(
            name="FoodProductPurchaseLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.IntegerField(
                        choices=[(0, "미정"), (1, "결제"), (-1, "결제 취소")], default=0
                    ),
                ),
                ("count", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "food_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="food_product_purchase_logs",
                        to="app_model.foodorder",
                    ),
                ),
                (
                    "food_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_logs",
                        to="app_model.foodproduct",
                    ),
                ),
            ],
            options={
                "db_table": "oms_foodproductpurchaselog",
            },
        ),
        migrations.CreateModel(
            name="FoodProductOrderLimitRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.IntegerField(
                        choices=[(0, "미정"), (1, "요청 중"), (2, "적용 완료"), (3, "수정됨")],
                        default=0,
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        default=None, help_text="적용될 주문 제한 수량", null=True
                    ),
                ),
                ("start_at", models.DateTimeField(help_text="유저 주문 수량 적용 시점(start)")),
                ("end_at", models.DateTimeField(help_text="유저 주문 수량 적용 시점(end)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="app_model.foodproductorderlimitrequest",
                    ),
                ),
            ],
            options={
                "db_table": "oms_foodproductorderlimitrequestlog",
            },
        ),
        migrations.CreateModel(
            name="DietPlanFoodEventLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "backfill_id",
                    models.IntegerField(
                        default=None, help_text="배포 백필 후 삭제", null=True
                    ),
                ),
                ("amount", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "diet_plan_food",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_logs",
                        to="app_model.dietplanfood",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="app_model.dietplanfoodevent",
                    ),
                ),
            ],
            options={
                "db_table": "diet_dietplanfoodeventlog",
            },
        ),
        migrations.AddField(
            model_name="dietbundle",
            name="diet_plan",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="diet_bundles",
                to="app_model.dietplan",
            ),
        ),
        migrations.AddConstraint(
            model_name="foodproductorderlimitrequest",
            constraint=models.UniqueConstraint(
                fields=("limit", "apply_at"),
                name="unique limit and status for FoodProductOrderLimitRequest",
            ),
        ),
    ]
