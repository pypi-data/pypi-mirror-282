# Generated by Django 4.2.3 on 2024-01-08 18:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app_model', '0014_dietplancreateoption_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodProductStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit_type', models.IntegerField(choices=[(0, '미정'), (1, '재고형 limit'), (2, '로테이션형 limit')], default=1)),
                ('safety_stock', models.IntegerField(default=None, help_text='안전재고. 해당 값보다 아래면 is_available을 False 처리합니다.', null=True)),
                ('proper_stock', models.IntegerField(default=None, help_text='적정재고. 해당 값보다 아래면 alarm을 합니다.', null=True)),
                ('expiration_day', models.IntegerField(default=None, help_text='유통기한 기간입니다. FoodProductOrderLimit의 manufactured_at과 연동하여 validated_at를 처리합니다', null=True)),
                ('rotation_day', models.IntegerField(default=None, help_text='rotation limit이 돌아가는 주기입니다. \n        만약 14일이면 새로운 FoodProductOrderLimit 생성할 때, 기존 것에 start_at과 end_at을 14일을 더합니다.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'oms_foodproductstock',
            },
        ),
        migrations.AddField(
            model_name='foodproductorderlimit',
            name='is_available',
            field=models.BooleanField(default=True, help_text='팔리는 날짜 별로 is_available 처리'),
        ),
        migrations.AddField(
            model_name='foodproductorderlimit',
            name='manufactured_at',
            field=models.DateTimeField(default=None, help_text='생산날짜입니다', null=True),
        ),
        migrations.AddField(
            model_name='foodproductorderlimit',
            name='rotation_day',
            field=models.IntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name='foodproductorderlimit',
            name='validated_at',
            field=models.DateTimeField(default=None, help_text='해당 상품의 유통기한입니다. 생산날짜와 FoodProductStock의 expiration_day로 자동으로 계산되어 기입됩니다.', null=True),
        ),
        migrations.AlterField(
            model_name='foodproduct',
            name='name',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='foodproduct',
            name='sku',
            field=models.CharField(db_index=True, help_text='재고관리코드', max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='foodproductorderlimit',
            name='apply_at',
            field=models.DateTimeField(default=None, help_text='deprecated 되었습니다.', null=True),
        ),
        migrations.AlterField(
            model_name='foodproductorderlimit',
            name='food_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_limits', to='app_model.foodproduct'),
        ),
        migrations.AlterField(
            model_name='foodproductorderlimit',
            name='start_at',
            field=models.DateTimeField(db_index=True, help_text='유저 주문 수량 적용 시점(start)'),
        ),
        migrations.CreateModel(
            name='FoodProductStockLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_stock', models.IntegerField(default=0, help_text='총재고')),
                ('receiving_stock', models.IntegerField(default=0, help_text='입고 재고')),
                ('normal_stock', models.IntegerField(default=0, help_text='출고가능 재고')),
                ('order_stock', models.IntegerField(default=0, help_text='출고지시 재고')),
                ('shipping_stock', models.IntegerField(default=0, help_text='출고작업중 재고')),
                ('damaged_stock', models.IntegerField(default=0, help_text='불량재고')),
                ('return_stock', models.IntegerField(default=0, help_text='반품재고')),
                ('keeping_stock', models.IntegerField(default=0, help_text='보관재고')),
                ('request_at', models.DateTimeField(db_index=True, help_text='특정 시점을 적어주면 좋습니다. created_at으로 처리하는 것과 별개로 로직적인 이유로 적어주세요.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='app_model.foodproductstock')),
            ],
        ),
        migrations.AddField(
            model_name='foodproductstock',
            name='food_product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='app_model.foodproduct'),
        ),
        migrations.AddField(
            model_name='foodproductstock',
            name='shipping_product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='app_model.shippingproduct'),
        ),
    ]
