# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.return_submission_task import ReturnSubmissionTask


class ReturnSubmissionUpdateRelationships(object):

    """Implementation of the 'ReturnSubmissionUpdateRelationships' model.

    TODO: type model description here.

    Attributes:
        return_submission_tasks (List[ReturnSubmissionTask]): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "return_submission_tasks": 'return_submission_tasks'
    }

    _optionals = [
        'return_submission_tasks',
    ]

    def __init__(self,
                 return_submission_tasks=APIHelper.SKIP):
        """Constructor for the ReturnSubmissionUpdateRelationships class"""

        # Initialize members of the class
        if return_submission_tasks is not APIHelper.SKIP:
            self.return_submission_tasks = return_submission_tasks 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        return_submission_tasks = None
        if dictionary.get('return_submission_tasks') is not None:
            return_submission_tasks = [ReturnSubmissionTask.from_dictionary(x) for x in dictionary.get('return_submission_tasks')]
        else:
            return_submission_tasks = APIHelper.SKIP
        # Return an object of this model
        return cls(return_submission_tasks)
