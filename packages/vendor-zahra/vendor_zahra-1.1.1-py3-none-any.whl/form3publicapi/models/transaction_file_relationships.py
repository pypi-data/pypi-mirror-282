# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.thin_relationship import ThinRelationship
from form3publicapi.models.transaction_file_admissions import TransactionFileAdmissions
from form3publicapi.models.transaction_file_submissions import TransactionFileSubmissions


class TransactionFileRelationships(object):

    """Implementation of the 'TransactionFileRelationships' model.

    TODO: type model description here.

    Attributes:
        reports (ThinRelationship): TODO: type description here.
        transaction_file_admissions (TransactionFileAdmissions): TODO: type
            description here.
        transaction_file_submissions (TransactionFileSubmissions): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reports": 'reports',
        "transaction_file_admissions": 'transaction_file_admissions',
        "transaction_file_submissions": 'transaction_file_submissions'
    }

    _optionals = [
        'reports',
        'transaction_file_admissions',
        'transaction_file_submissions',
    ]

    def __init__(self,
                 reports=APIHelper.SKIP,
                 transaction_file_admissions=APIHelper.SKIP,
                 transaction_file_submissions=APIHelper.SKIP):
        """Constructor for the TransactionFileRelationships class"""

        # Initialize members of the class
        if reports is not APIHelper.SKIP:
            self.reports = reports 
        if transaction_file_admissions is not APIHelper.SKIP:
            self.transaction_file_admissions = transaction_file_admissions 
        if transaction_file_submissions is not APIHelper.SKIP:
            self.transaction_file_submissions = transaction_file_submissions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        reports = ThinRelationship.from_dictionary(dictionary.get('reports')) if 'reports' in dictionary.keys() else APIHelper.SKIP
        transaction_file_admissions = TransactionFileAdmissions.from_dictionary(dictionary.get('transaction_file_admissions')) if 'transaction_file_admissions' in dictionary.keys() else APIHelper.SKIP
        transaction_file_submissions = TransactionFileSubmissions.from_dictionary(dictionary.get('transaction_file_submissions')) if 'transaction_file_submissions' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(reports,
                   transaction_file_admissions,
                   transaction_file_submissions)
