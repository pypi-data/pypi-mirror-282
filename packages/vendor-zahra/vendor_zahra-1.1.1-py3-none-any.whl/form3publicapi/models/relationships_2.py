# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.relationship_payment_admission_beneficiary_account import RelationshipPaymentAdmissionBeneficiaryAccount
from form3publicapi.models.relationship_payment_admission_tasks import RelationshipPaymentAdmissionTasks
from form3publicapi.models.relationship_payments import RelationshipPayments


class Relationships2(object):

    """Implementation of the 'Relationships2' model.

    TODO: type model description here.

    Attributes:
        beneficiary_account (RelationshipPaymentAdmissionBeneficiaryAccount):
            TODO: type description here.
        payment (RelationshipPayments): TODO: type description here.
        payment_admission_task (RelationshipPaymentAdmissionTasks): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "beneficiary_account": 'beneficiary_account',
        "payment": 'payment',
        "payment_admission_task": 'payment_admission_task'
    }

    _optionals = [
        'beneficiary_account',
        'payment',
        'payment_admission_task',
    ]

    def __init__(self,
                 beneficiary_account=APIHelper.SKIP,
                 payment=APIHelper.SKIP,
                 payment_admission_task=APIHelper.SKIP):
        """Constructor for the Relationships2 class"""

        # Initialize members of the class
        if beneficiary_account is not APIHelper.SKIP:
            self.beneficiary_account = beneficiary_account 
        if payment is not APIHelper.SKIP:
            self.payment = payment 
        if payment_admission_task is not APIHelper.SKIP:
            self.payment_admission_task = payment_admission_task 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        beneficiary_account = RelationshipPaymentAdmissionBeneficiaryAccount.from_dictionary(dictionary.get('beneficiary_account')) if 'beneficiary_account' in dictionary.keys() else APIHelper.SKIP
        payment = RelationshipPayments.from_dictionary(dictionary.get('payment')) if 'payment' in dictionary.keys() else APIHelper.SKIP
        payment_admission_task = RelationshipPaymentAdmissionTasks.from_dictionary(dictionary.get('payment_admission_task')) if 'payment_admission_task' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(beneficiary_account,
                   payment,
                   payment_admission_task)
