# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.mandate_admission_2 import MandateAdmission2
from form3publicapi.models.mandate_return_2 import MandateReturn2
from form3publicapi.models.mandate_submission_2 import MandateSubmission2
from form3publicapi.models.most_recent_collection_2 import MostRecentCollection2


class MandateRelationships(object):

    """Implementation of the 'MandateRelationships' model.

    TODO: type model description here.

    Attributes:
        mandate_admission (MandateAdmission2): TODO: type description here.
        mandate_return (MandateReturn2): TODO: type description here.
        mandate_submission (MandateSubmission2): TODO: type description here.
        most_recent_collection (MostRecentCollection2): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mandate_admission": 'mandate_admission',
        "mandate_return": 'mandate_return',
        "mandate_submission": 'mandate_submission',
        "most_recent_collection": 'most_recent_collection'
    }

    _optionals = [
        'mandate_admission',
        'mandate_return',
        'mandate_submission',
        'most_recent_collection',
    ]

    def __init__(self,
                 mandate_admission=APIHelper.SKIP,
                 mandate_return=APIHelper.SKIP,
                 mandate_submission=APIHelper.SKIP,
                 most_recent_collection=APIHelper.SKIP):
        """Constructor for the MandateRelationships class"""

        # Initialize members of the class
        if mandate_admission is not APIHelper.SKIP:
            self.mandate_admission = mandate_admission 
        if mandate_return is not APIHelper.SKIP:
            self.mandate_return = mandate_return 
        if mandate_submission is not APIHelper.SKIP:
            self.mandate_submission = mandate_submission 
        if most_recent_collection is not APIHelper.SKIP:
            self.most_recent_collection = most_recent_collection 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mandate_admission = MandateAdmission2.from_dictionary(dictionary.get('mandate_admission')) if 'mandate_admission' in dictionary.keys() else APIHelper.SKIP
        mandate_return = MandateReturn2.from_dictionary(dictionary.get('mandate_return')) if 'mandate_return' in dictionary.keys() else APIHelper.SKIP
        mandate_submission = MandateSubmission2.from_dictionary(dictionary.get('mandate_submission')) if 'mandate_submission' in dictionary.keys() else APIHelper.SKIP
        most_recent_collection = MostRecentCollection2.from_dictionary(dictionary.get('most_recent_collection')) if 'most_recent_collection' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(mandate_admission,
                   mandate_return,
                   mandate_submission,
                   most_recent_collection)
