# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.relationship_links import RelationshipLinks


class Relationships20(object):

    """Implementation of the 'Relationships20' model.

    TODO: type model description here.

    Attributes:
        decision_admission (RelationshipLinks): TODO: type description here.
        decision_submission (RelationshipLinks): TODO: type description here.
        payment (RelationshipLinks): TODO: type description here.
        recall (RelationshipLinks): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "decision_admission": 'decision_admission',
        "decision_submission": 'decision_submission',
        "payment": 'payment',
        "recall": 'recall'
    }

    _optionals = [
        'decision_admission',
        'decision_submission',
        'payment',
        'recall',
    ]

    def __init__(self,
                 decision_admission=APIHelper.SKIP,
                 decision_submission=APIHelper.SKIP,
                 payment=APIHelper.SKIP,
                 recall=APIHelper.SKIP):
        """Constructor for the Relationships20 class"""

        # Initialize members of the class
        if decision_admission is not APIHelper.SKIP:
            self.decision_admission = decision_admission 
        if decision_submission is not APIHelper.SKIP:
            self.decision_submission = decision_submission 
        if payment is not APIHelper.SKIP:
            self.payment = payment 
        if recall is not APIHelper.SKIP:
            self.recall = recall 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        decision_admission = RelationshipLinks.from_dictionary(dictionary.get('decision_admission')) if 'decision_admission' in dictionary.keys() else APIHelper.SKIP
        decision_submission = RelationshipLinks.from_dictionary(dictionary.get('decision_submission')) if 'decision_submission' in dictionary.keys() else APIHelper.SKIP
        payment = RelationshipLinks.from_dictionary(dictionary.get('payment')) if 'payment' in dictionary.keys() else APIHelper.SKIP
        recall = RelationshipLinks.from_dictionary(dictionary.get('recall')) if 'recall' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(decision_admission,
                   decision_submission,
                   payment,
                   recall)
