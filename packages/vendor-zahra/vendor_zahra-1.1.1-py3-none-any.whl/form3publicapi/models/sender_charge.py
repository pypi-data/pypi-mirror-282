# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class SenderCharge(object):

    """Implementation of the 'SenderCharge' model.

    List of transaction charges due to the sender of the transaction

    Attributes:
        amount (str): Amount of each transaction charge due to the sender of
            the transaction. Requires 1 to 2 decimal places. Must be > 0.
        currency (str): Currency of `amount`. Currency code as defined in [ISO
            4217](http://www.iso.org/iso/home/standards/currency_codes.htm).

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "amount": 'amount',
        "currency": 'currency'
    }

    _optionals = [
        'amount',
        'currency',
    ]

    def __init__(self,
                 amount=APIHelper.SKIP,
                 currency=APIHelper.SKIP):
        """Constructor for the SenderCharge class"""

        # Initialize members of the class
        if amount is not APIHelper.SKIP:
            self.amount = amount 
        if currency is not APIHelper.SKIP:
            self.currency = currency 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        amount = dictionary.get("amount") if dictionary.get("amount") else APIHelper.SKIP
        currency = dictionary.get("currency") if dictionary.get("currency") else APIHelper.SKIP
        # Return an object of this model
        return cls(amount,
                   currency)
