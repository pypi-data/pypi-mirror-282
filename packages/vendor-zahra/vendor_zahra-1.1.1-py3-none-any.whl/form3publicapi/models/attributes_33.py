# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Attributes33(object):

    """Implementation of the 'Attributes33' model.

    TODO: type model description here.

    Attributes:
        scheme_status_code (str): TODO: type description here.
        scheme_status_code_description (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "scheme_status_code": 'scheme_status_code',
        "scheme_status_code_description": 'scheme_status_code_description'
    }

    def __init__(self,
                 scheme_status_code=None,
                 scheme_status_code_description=None):
        """Constructor for the Attributes33 class"""

        # Initialize members of the class
        self.scheme_status_code = scheme_status_code 
        self.scheme_status_code_description = scheme_status_code_description 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        scheme_status_code = dictionary.get("scheme_status_code") if dictionary.get("scheme_status_code") else None
        scheme_status_code_description = dictionary.get("scheme_status_code_description") if dictionary.get("scheme_status_code_description") else None
        # Return an object of this model
        return cls(scheme_status_code,
                   scheme_status_code_description)
