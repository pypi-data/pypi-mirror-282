# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class ReportUser(object):

    """Implementation of the 'ReportUser' model.

    TODO: type model description here.

    Attributes:
        user_id (str): Identifies a user or organization
        user_id_code (str): Type of identifier for the user or organization

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user_id": 'user_id',
        "user_id_code": 'user_id_code'
    }

    _optionals = [
        'user_id',
        'user_id_code',
    ]

    def __init__(self,
                 user_id=APIHelper.SKIP,
                 user_id_code=APIHelper.SKIP):
        """Constructor for the ReportUser class"""

        # Initialize members of the class
        if user_id is not APIHelper.SKIP:
            self.user_id = user_id 
        if user_id_code is not APIHelper.SKIP:
            self.user_id_code = user_id_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        user_id = dictionary.get("user_id") if dictionary.get("user_id") else APIHelper.SKIP
        user_id_code = dictionary.get("user_id_code") if dictionary.get("user_id_code") else APIHelper.SKIP
        # Return an object of this model
        return cls(user_id,
                   user_id_code)
