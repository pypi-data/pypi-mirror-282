# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.beneficiary_party import BeneficiaryParty


class Attributes3(object):

    """Implementation of the 'Attributes3' model.

    TODO: type model description here.

    Attributes:
        beneficiary_party (BeneficiaryParty): TODO: type description here.
        reason_code (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "beneficiary_party": 'beneficiary_party',
        "reason_code": 'reason_code'
    }

    _optionals = [
        'beneficiary_party',
        'reason_code',
    ]

    def __init__(self,
                 beneficiary_party=APIHelper.SKIP,
                 reason_code=APIHelper.SKIP):
        """Constructor for the Attributes3 class"""

        # Initialize members of the class
        if beneficiary_party is not APIHelper.SKIP:
            self.beneficiary_party = beneficiary_party 
        if reason_code is not APIHelper.SKIP:
            self.reason_code = reason_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        beneficiary_party = BeneficiaryParty.from_dictionary(dictionary.get('beneficiary_party')) if 'beneficiary_party' in dictionary.keys() else APIHelper.SKIP
        reason_code = dictionary.get("reason_code") if dictionary.get("reason_code") else APIHelper.SKIP
        # Return an object of this model
        return cls(beneficiary_party,
                   reason_code)
