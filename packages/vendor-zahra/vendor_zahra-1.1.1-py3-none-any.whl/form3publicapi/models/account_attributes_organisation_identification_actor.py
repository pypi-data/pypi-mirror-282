# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
import dateutil.parser

from form3publicapi.api_helper import APIHelper


class AccountAttributesOrganisationIdentificationActor(object):

    """Implementation of the 'AccountAttributesOrganisationIdentificationActor' model.

    TODO: type model description here.

    Attributes:
        birth_date (date): TODO: type description here.
        name (List[str]): Actor names (for example title, first name, last
            name). Used for Confirmation of Payee matching.
        residency (str): ISO 3166-1 code used to identify the domicile of the
            actor
        role (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "birth_date": 'birth_date',
        "name": 'name',
        "residency": 'residency',
        "role": 'role'
    }

    _optionals = [
        'birth_date',
        'name',
        'residency',
        'role',
    ]

    def __init__(self,
                 birth_date=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 residency=APIHelper.SKIP,
                 role=APIHelper.SKIP):
        """Constructor for the AccountAttributesOrganisationIdentificationActor class"""

        # Initialize members of the class
        if birth_date is not APIHelper.SKIP:
            self.birth_date = birth_date 
        if name is not APIHelper.SKIP:
            self.name = name 
        if residency is not APIHelper.SKIP:
            self.residency = residency 
        if role is not APIHelper.SKIP:
            self.role = role 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        birth_date = dateutil.parser.parse(dictionary.get('birth_date')).date() if dictionary.get('birth_date') else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        residency = dictionary.get("residency") if dictionary.get("residency") else APIHelper.SKIP
        role = dictionary.get("role") if dictionary.get("role") else APIHelper.SKIP
        # Return an object of this model
        return cls(birth_date,
                   name,
                   residency,
                   role)
