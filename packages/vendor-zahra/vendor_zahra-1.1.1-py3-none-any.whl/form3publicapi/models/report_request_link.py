# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.meta import Meta


class ReportRequestLink(object):

    """Implementation of the 'ReportRequestLink' model.

    TODO: type model description here.

    Attributes:
        href (str): TODO: type description here.
        meta (Meta): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "href": 'href',
        "meta": 'meta'
    }

    _optionals = [
        'meta',
    ]

    def __init__(self,
                 href=None,
                 meta=APIHelper.SKIP):
        """Constructor for the ReportRequestLink class"""

        # Initialize members of the class
        self.href = href 
        if meta is not APIHelper.SKIP:
            self.meta = meta 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        href = dictionary.get("href") if dictionary.get("href") else None
        meta = Meta.from_dictionary(dictionary.get('meta')) if 'meta' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(href,
                   meta)
