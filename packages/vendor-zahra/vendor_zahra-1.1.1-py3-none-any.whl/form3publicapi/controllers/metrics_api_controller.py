# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from form3publicapi.api_helper import APIHelper
from form3publicapi.configuration import Server
from form3publicapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from form3publicapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from form3publicapi.models.metrics_query_response import MetricsQueryResponse
from form3publicapi.exceptions.metrics_query_response_error_exception import MetricsQueryResponseErrorException
from form3publicapi.exceptions.api_exception import APIException


class MetricsAPIController(BaseController):

    """A Controller to access Endpoints in the form3publicapi API."""
    def __init__(self, config):
        super(MetricsAPIController, self).__init__(config)

    def query_endpoint_for_metrics(self,
                                   query,
                                   time=None,
                                   timeout=None):
        """Does a GET request to /metrics/prometheus/api/v1/query.

        Query Endpoint for metrics

        Args:
            query (str): Query to Execute
            time (str, optional): RFC3339 or unix_timestamp
            timeout (str, optional): See
                https://prometheus.io/docs/prometheus/latest/querying/basics/#t
                ime-durations

        Returns:
            MetricsQueryResponse: Response from the API. See Prometheus api
                https://prometheus.io/docs/prometheus/latest/querying/api/#inst
                ant-queries

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/metrics/prometheus/api/v1/query')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('query')
                         .value(query))
            .query_param(Parameter()
                         .key('time')
                         .value(time))
            .query_param(Parameter()
                         .key('timeout')
                         .value(timeout))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('OAuth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(MetricsQueryResponse.from_dictionary)
            .local_error('400', 'Bad Request', MetricsQueryResponseErrorException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()

    def query_endpoint_for_metrics_1(self,
                                     query,
                                     time=None,
                                     timeout=None):
        """Does a POST request to /metrics/prometheus/api/v1/query.

        Query Endpoint for metrics

        Args:
            query (str): Query to Execute
            time (str, optional): RFC3339 or unix_timestamp
            timeout (str, optional): See
                https://prometheus.io/docs/prometheus/latest/querying/basics/#t
                ime-durations

        Returns:
            MetricsQueryResponse: Response from the API. See Prometheus api
                https://prometheus.io/docs/prometheus/latest/querying/api/#inst
                ant-queries

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/metrics/prometheus/api/v1/query')
            .http_method(HttpMethodEnum.POST)
            .form_param(Parameter()
                        .key('query')
                        .value(query))
            .form_param(Parameter()
                        .key('time')
                        .value(time))
            .form_param(Parameter()
                        .key('timeout')
                        .value(timeout))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('OAuth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(MetricsQueryResponse.from_dictionary)
            .local_error('400', 'Bad Request', MetricsQueryResponseErrorException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()

    def query_range_endpoint_for_metrics(self,
                                         query,
                                         time=None,
                                         timeout=None,
                                         start=None,
                                         end=None,
                                         step=None):
        """Does a GET request to /metrics/prometheus/api/v1/query_range.

        Query Range Endpoint for metrics

        Args:
            query (str): Query to Execute
            time (str, optional): RFC3339 or unix_timestamp
            timeout (str, optional): See
                https://prometheus.io/docs/prometheus/latest/querying/basics/#t
                ime-durations
            start (str, optional): RFC3339 or unix_timestamp
            end (str, optional): RFC3339 or unix_timestamp
            step (str, optional): duration or float

        Returns:
            MetricsQueryResponse: Response from the API. See Prometheus api
                https://prometheus.io/docs/prometheus/latest/querying/api/#inst
                ant-queries

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/metrics/prometheus/api/v1/query_range')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('query')
                         .value(query))
            .query_param(Parameter()
                         .key('time')
                         .value(time))
            .query_param(Parameter()
                         .key('timeout')
                         .value(timeout))
            .query_param(Parameter()
                         .key('start')
                         .value(start))
            .query_param(Parameter()
                         .key('end')
                         .value(end))
            .query_param(Parameter()
                         .key('step')
                         .value(step))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('OAuth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(MetricsQueryResponse.from_dictionary)
            .local_error('400', 'Bad Request', MetricsQueryResponseErrorException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()

    def query_range_endpoint_for_metrics_1(self,
                                           query,
                                           time=None,
                                           timeout=None,
                                           start=None,
                                           end=None,
                                           step=None):
        """Does a POST request to /metrics/prometheus/api/v1/query_range.

        Query Range Endpoint for metrics

        Args:
            query (str): Query to Execute
            time (str, optional): RFC3339 or unix_timestamp
            timeout (str, optional): See
                https://prometheus.io/docs/prometheus/latest/querying/basics/#t
                ime-durations
            start (str, optional): RFC3339 or unix_timestamp
            end (str, optional): RFC3339 or unix_timestamp
            step (str, optional): duration or float

        Returns:
            MetricsQueryResponse: Response from the API. See Prometheus api
                https://prometheus.io/docs/prometheus/latest/querying/api/#inst
                ant-queries

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/metrics/prometheus/api/v1/query_range')
            .http_method(HttpMethodEnum.POST)
            .form_param(Parameter()
                        .key('query')
                        .value(query))
            .form_param(Parameter()
                        .key('time')
                        .value(time))
            .form_param(Parameter()
                        .key('timeout')
                        .value(timeout))
            .form_param(Parameter()
                        .key('start')
                        .value(start))
            .form_param(Parameter()
                        .key('end')
                        .value(end))
            .form_param(Parameter()
                        .key('step')
                        .value(step))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('OAuth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(MetricsQueryResponse.from_dictionary)
            .local_error('400', 'Bad Request', MetricsQueryResponseErrorException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()

    def federate_endpoint_for_metrics(self,
                                      match):
        """Does a GET request to /metrics/prometheus/federate.

        Federate Endpoint for metrics

        Args:
            match (List[str]): See
                https://prometheus.io/docs/prometheus/latest/querying/basics/#i
                nstant-vector-selectors

        Returns:
            str: Response from the API. See Prometheus api
                https://prometheus.io/docs/prometheus/latest/querying/api/#inst
                ant-queries

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/metrics/prometheus/federate')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('match')
                         .value(match))
            .auth(Single('OAuth2'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Bad Request', MetricsQueryResponseErrorException)
            .local_error('403', 'Forbidden', APIException)
            .local_error('500', 'Internal Server Error', APIException)
        ).execute()
