# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from form3publicapi.api_helper import APIHelper
import form3publicapi.exceptions.api_exception
from form3publicapi.models.prometheus_metric_data import PrometheusMetricData


class MetricsQueryResponseErrorException(form3publicapi.exceptions.api_exception.APIException):
    def __init__(self, reason, response):
        """Constructor for the MetricsQueryResponseErrorException class

        Args:
            reason (string): The reason (or error message) for the Exception
                to be raised.
            response (HttpResponse): The HttpResponse of the API call.

        """
        super(MetricsQueryResponseErrorException, self).__init__(reason, response)
        dictionary = APIHelper.json_deserialize(self.response.text)
        if isinstance(dictionary, dict):
            self.unbox(dictionary)

    def unbox(self, dictionary):
        """Populates the properties of this object by extracting them from a dictionary.

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        """
        self.data = PrometheusMetricData.from_dictionary(dictionary.get('data')) if 'data' in dictionary.keys() else None
        self.error = dictionary.get("error") if dictionary.get("error") else None
        self.error_type = dictionary.get("errorType") if dictionary.get("errorType") else None
        self.status = dictionary.get("status") if dictionary.get("status") else None
        self.warnings = dictionary.get("warnings") if dictionary.get("warnings") else None
