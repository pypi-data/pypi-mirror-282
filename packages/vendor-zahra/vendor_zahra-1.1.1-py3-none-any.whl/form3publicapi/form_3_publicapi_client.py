# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.configurations.global_configuration import GlobalConfiguration
from apimatic_core.decorators.lazy_property import LazyProperty
from form3publicapi.configuration import Configuration
from form3publicapi.controllers.base_controller import BaseController
from form3publicapi.configuration import Environment
from form3publicapi.http.auth.basic import Basic
from form3publicapi.http.auth.o_auth_2 import OAuth2
from form3publicapi.controllers.audit_controller import AuditController
from form3publicapi.controllers.scheme_file_api_controller\
    import SchemeFileAPIController
from form3publicapi.controllers.transaction_file_api_controller\
    import TransactionFileAPIController
from form3publicapi.controllers.metrics_api_controller\
    import MetricsAPIController
from form3publicapi.controllers.reports_controller import ReportsController
from form3publicapi.controllers.scheme_messages_controller\
    import SchemeMessagesController
from form3publicapi.controllers.subscriptions_controller\
    import SubscriptionsController
from form3publicapi.controllers.oauth_2_controller import Oauth2Controller
from form3publicapi.controllers.accounts_controller import AccountsController
from form3publicapi.controllers.account_identification_controller\
    import AccountIdentificationController
from form3publicapi.controllers.branches_controller import BranchesController
from form3publicapi.controllers.branch_identification_controller\
    import BranchIdentificationController
from form3publicapi.controllers.name_verification_api_controller\
    import NameVerificationAPIController
from form3publicapi.controllers.payments_controller import PaymentsController
from form3publicapi.controllers.organisations_controller\
    import OrganisationsController
from form3publicapi.controllers.platformsecurityapi_controller\
    import PlatformsecurityapiController
from form3publicapi.controllers.roles_controller import RolesController
from form3publicapi.controllers.ace_controller import ACEController
from form3publicapi.controllers.users_controller import UsersController
from form3publicapi.controllers.claims_controller import ClaimsController
from form3publicapi.controllers.direct_debits_controller\
    import DirectDebitsController
from form3publicapi.controllers.mandates_controller import MandatesController
from form3publicapi.controllers.query_api_controller import QueryApiController
from form3publicapi.controllers.account_validation_controller\
    import AccountValidationController
from form3publicapi.controllers.o_auth_authorization_controller\
    import OAuthAuthorizationController


class Form3publicapiClient(object):
    @LazyProperty
    def audit(self):
        return AuditController(self.global_configuration)

    @LazyProperty
    def scheme_file_api(self):
        return SchemeFileAPIController(self.global_configuration)

    @LazyProperty
    def transaction_file_api(self):
        return TransactionFileAPIController(self.global_configuration)

    @LazyProperty
    def metrics_api(self):
        return MetricsAPIController(self.global_configuration)

    @LazyProperty
    def reports(self):
        return ReportsController(self.global_configuration)

    @LazyProperty
    def scheme_messages(self):
        return SchemeMessagesController(self.global_configuration)

    @LazyProperty
    def subscriptions(self):
        return SubscriptionsController(self.global_configuration)

    @LazyProperty
    def oauth_2(self):
        return Oauth2Controller(self.global_configuration)

    @LazyProperty
    def accounts(self):
        return AccountsController(self.global_configuration)

    @LazyProperty
    def account_identification(self):
        return AccountIdentificationController(self.global_configuration)

    @LazyProperty
    def branches(self):
        return BranchesController(self.global_configuration)

    @LazyProperty
    def branch_identification(self):
        return BranchIdentificationController(self.global_configuration)

    @LazyProperty
    def name_verification_api(self):
        return NameVerificationAPIController(self.global_configuration)

    @LazyProperty
    def payments(self):
        return PaymentsController(self.global_configuration)

    @LazyProperty
    def organisations(self):
        return OrganisationsController(self.global_configuration)

    @LazyProperty
    def platformsecurityapi(self):
        return PlatformsecurityapiController(self.global_configuration)

    @LazyProperty
    def roles(self):
        return RolesController(self.global_configuration)

    @LazyProperty
    def ace(self):
        return ACEController(self.global_configuration)

    @LazyProperty
    def users(self):
        return UsersController(self.global_configuration)

    @LazyProperty
    def claims(self):
        return ClaimsController(self.global_configuration)

    @LazyProperty
    def direct_debits(self):
        return DirectDebitsController(self.global_configuration)

    @LazyProperty
    def mandates(self):
        return MandatesController(self.global_configuration)

    @LazyProperty
    def query_api(self):
        return QueryApiController(self.global_configuration)

    @LazyProperty
    def account_validation(self):
        return AccountValidationController(self.global_configuration)

    @LazyProperty
    def o_auth_authorization(self):
        return OAuthAuthorizationController(self.global_configuration)

    @property
    def o_auth_2(self):
        return self.auth_managers['OAuth2']

    def __init__(self, http_client_instance=None,
                 override_http_client_configuration=False, http_call_back=None,
                 timeout=60, max_retries=0, backoff_factor=2,
                 retry_statuses=None, retry_methods=None,
                 environment=Environment.PRODUCTION, basic_credentials=None,
                 o_auth_2_credentials=None, config=None):
        self.config = config or Configuration(
            http_client_instance=http_client_instance,
            override_http_client_configuration=override_http_client_configuration,
            http_call_back=http_call_back, timeout=timeout,
            max_retries=max_retries, backoff_factor=backoff_factor,
            retry_statuses=retry_statuses, retry_methods=retry_methods,
            environment=environment, basic_credentials=basic_credentials,
            o_auth_2_credentials=o_auth_2_credentials)

        self.global_configuration = GlobalConfiguration(self.config)\
            .global_errors(BaseController.global_errors())\
            .base_uri_executor(self.config.get_base_uri)\
            .user_agent(BaseController.user_agent(), BaseController.user_agent_parameters())

        self.auth_managers = {key: None for key in ['Basic', 'OAuth2']}
        self.auth_managers['Basic'] = Basic(self.config.basic_credentials)
        self.auth_managers['OAuth2'] = OAuth2(self.config.o_auth_2_credentials,
                                              self.global_configuration)
        self.global_configuration = self.global_configuration.auth_managers(self.auth_managers)

