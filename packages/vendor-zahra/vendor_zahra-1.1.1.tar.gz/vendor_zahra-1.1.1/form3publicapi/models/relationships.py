# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.sort_code import SortCode


class Relationships(object):

    """Implementation of the 'Relationships' model.

    TODO: type model description here.

    Attributes:
        sort_code (SortCode): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sort_code": 'sort_code'
    }

    _optionals = [
        'sort_code',
    ]

    def __init__(self,
                 sort_code=APIHelper.SKIP):
        """Constructor for the Relationships class"""

        # Initialize members of the class
        if sort_code is not APIHelper.SKIP:
            self.sort_code = sort_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        sort_code = SortCode.from_dictionary(dictionary.get('sort_code')) if 'sort_code' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(sort_code)
