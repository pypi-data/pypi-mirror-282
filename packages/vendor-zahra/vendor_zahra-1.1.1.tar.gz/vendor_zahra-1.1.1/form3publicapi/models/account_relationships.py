# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.relationship_links import RelationshipLinks


class AccountRelationships(object):

    """Implementation of the 'AccountRelationships' model.

    TODO: type model description here.

    Attributes:
        account_events (RelationshipLinks): TODO: type description here.
        master_account (RelationshipLinks): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_events": 'account_events',
        "master_account": 'master_account'
    }

    _optionals = [
        'account_events',
        'master_account',
    ]

    def __init__(self,
                 account_events=APIHelper.SKIP,
                 master_account=APIHelper.SKIP):
        """Constructor for the AccountRelationships class"""

        # Initialize members of the class
        if account_events is not APIHelper.SKIP:
            self.account_events = account_events 
        if master_account is not APIHelper.SKIP:
            self.master_account = master_account 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        account_events = RelationshipLinks.from_dictionary(dictionary.get('account_events')) if 'account_events' in dictionary.keys() else APIHelper.SKIP
        master_account = RelationshipLinks.from_dictionary(dictionary.get('master_account')) if 'master_account' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(account_events,
                   master_account)
