# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.relationship_query_response_admission import RelationshipQueryResponseAdmission
from form3publicapi.models.relationship_query_response_submission import RelationshipQueryResponseSubmission
from form3publicapi.models.relationships_full_query import RelationshipsFullQuery


class QueryResponseRelationships(object):

    """Implementation of the 'QueryResponseRelationships' model.

    TODO: type model description here.

    Attributes:
        query (RelationshipsFullQuery): TODO: type description here.
        query_response_admission (RelationshipQueryResponseAdmission): TODO:
            type description here.
        query_response_submission (RelationshipQueryResponseSubmission): TODO:
            type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "query": 'query',
        "query_response_admission": 'query_response_admission',
        "query_response_submission": 'query_response_submission'
    }

    _optionals = [
        'query',
        'query_response_admission',
        'query_response_submission',
    ]

    def __init__(self,
                 query=APIHelper.SKIP,
                 query_response_admission=APIHelper.SKIP,
                 query_response_submission=APIHelper.SKIP):
        """Constructor for the QueryResponseRelationships class"""

        # Initialize members of the class
        if query is not APIHelper.SKIP:
            self.query = query 
        if query_response_admission is not APIHelper.SKIP:
            self.query_response_admission = query_response_admission 
        if query_response_submission is not APIHelper.SKIP:
            self.query_response_submission = query_response_submission 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        query = RelationshipsFullQuery.from_dictionary(dictionary.get('query')) if 'query' in dictionary.keys() else APIHelper.SKIP
        query_response_admission = RelationshipQueryResponseAdmission.from_dictionary(dictionary.get('query_response_admission')) if 'query_response_admission' in dictionary.keys() else APIHelper.SKIP
        query_response_submission = RelationshipQueryResponseSubmission.from_dictionary(dictionary.get('query_response_submission')) if 'query_response_submission' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(query,
                   query_response_admission,
                   query_response_submission)
