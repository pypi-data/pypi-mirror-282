# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class OrganisationIdentification(object):

    """Implementation of the 'OrganisationIdentification' model.

    TODO: type model description here.

    Attributes:
        identification (str): TODO: type description here.
        identification_code (str): TODO: type description here.
        identification_issuer (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "identification": 'identification',
        "identification_code": 'identification_code',
        "identification_issuer": 'identification_issuer'
    }

    _optionals = [
        'identification',
        'identification_code',
        'identification_issuer',
    ]

    def __init__(self,
                 identification=APIHelper.SKIP,
                 identification_code=APIHelper.SKIP,
                 identification_issuer=APIHelper.SKIP):
        """Constructor for the OrganisationIdentification class"""

        # Initialize members of the class
        if identification is not APIHelper.SKIP:
            self.identification = identification 
        if identification_code is not APIHelper.SKIP:
            self.identification_code = identification_code 
        if identification_issuer is not APIHelper.SKIP:
            self.identification_issuer = identification_issuer 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        identification = dictionary.get("identification") if dictionary.get("identification") else APIHelper.SKIP
        identification_code = dictionary.get("identification_code") if dictionary.get("identification_code") else APIHelper.SKIP
        identification_issuer = dictionary.get("identification_issuer") if dictionary.get("identification_issuer") else APIHelper.SKIP
        # Return an object of this model
        return cls(identification,
                   identification_code,
                   identification_issuer)
