# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper
from form3publicapi.models.debtor_party_3 import DebtorParty3


class Attributes46(object):

    """Implementation of the 'Attributes46' model.

    TODO: type model description here.

    Attributes:
        debtor_party (DebtorParty3): TODO: type description here.
        return_code (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "debtor_party": 'debtor_party',
        "return_code": 'return_code'
    }

    _optionals = [
        'debtor_party',
        'return_code',
    ]

    def __init__(self,
                 debtor_party=APIHelper.SKIP,
                 return_code=APIHelper.SKIP):
        """Constructor for the Attributes46 class"""

        # Initialize members of the class
        if debtor_party is not APIHelper.SKIP:
            self.debtor_party = debtor_party 
        if return_code is not APIHelper.SKIP:
            self.return_code = return_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        debtor_party = DebtorParty3.from_dictionary(dictionary.get('debtor_party')) if 'debtor_party' in dictionary.keys() else APIHelper.SKIP
        return_code = dictionary.get("return_code") if dictionary.get("return_code") else APIHelper.SKIP
        # Return an object of this model
        return cls(debtor_party,
                   return_code)
