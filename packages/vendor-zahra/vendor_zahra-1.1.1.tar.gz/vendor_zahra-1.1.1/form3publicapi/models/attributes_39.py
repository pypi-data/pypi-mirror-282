# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Attributes39(object):

    """Implementation of the 'Attributes39' model.

    TODO: type model description here.

    Attributes:
        file_format (str): The format of the file that will be submitted to
            Form3
        file_hash (str): Hashed content of the file
        file_size (int): The size of the file to be uploaded - number of
            bytes. Max size is 1.4 Gigabyte
        file_type (FileTypeEnum): The file type
        hashing_algorithm (str): The algorithm used to generate the signature
        number_of_parts (int): The count of chunks to be uploaded to the
            resource
        payment_scheme (PaymentScheme2Enum): Scheme/gateway that the file is
            to be processed by

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "file_format": 'file_format',
        "file_hash": 'file_hash',
        "file_size": 'file_size',
        "file_type": 'file_type',
        "hashing_algorithm": 'hashing_algorithm',
        "number_of_parts": 'number_of_parts',
        "payment_scheme": 'payment_scheme'
    }

    def __init__(self,
                 file_hash=None,
                 file_size=None,
                 file_type='switch',
                 number_of_parts=None,
                 payment_scheme=None):
        """Constructor for the Attributes39 class"""

        # Initialize members of the class
        self.file_format = 'xml' 
        self.file_hash = file_hash 
        self.file_size = file_size 
        self.file_type = file_type 
        self.hashing_algorithm = 'SHA256' 
        self.number_of_parts = number_of_parts 
        self.payment_scheme = payment_scheme 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        file_hash = dictionary.get("file_hash") if dictionary.get("file_hash") else None
        file_size = dictionary.get("file_size") if dictionary.get("file_size") else None
        file_type = dictionary.get("file_type") if dictionary.get("file_type") else 'switch'
        number_of_parts = dictionary.get("number_of_parts") if dictionary.get("number_of_parts") else None
        payment_scheme = dictionary.get("payment_scheme") if dictionary.get("payment_scheme") else None
        # Return an object of this model
        return cls(file_hash,
                   file_size,
                   file_type,
                   number_of_parts,
                   payment_scheme)
