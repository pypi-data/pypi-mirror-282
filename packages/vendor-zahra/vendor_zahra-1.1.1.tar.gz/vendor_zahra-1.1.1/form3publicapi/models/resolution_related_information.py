# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
import dateutil.parser

from form3publicapi.api_helper import APIHelper
from form3publicapi.models.reference import Reference


class ResolutionRelatedInformation(object):

    """Implementation of the 'ResolutionRelatedInformation' model.

    TODO: type model description here.

    Attributes:
        clearing_channel (ClearingChannelEnum): Answer to the recall request.
            Can either be `MPNS`, `RTGS` or `RTNS`.
        references (List[Reference]): Block to represent a list of references
        settlement_date (date): Date that the payment will be settled

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "clearing_channel": 'clearing_channel',
        "references": 'references',
        "settlement_date": 'settlement_date'
    }

    _optionals = [
        'clearing_channel',
        'references',
        'settlement_date',
    ]

    def __init__(self,
                 clearing_channel=APIHelper.SKIP,
                 references=APIHelper.SKIP,
                 settlement_date=APIHelper.SKIP):
        """Constructor for the ResolutionRelatedInformation class"""

        # Initialize members of the class
        if clearing_channel is not APIHelper.SKIP:
            self.clearing_channel = clearing_channel 
        if references is not APIHelper.SKIP:
            self.references = references 
        if settlement_date is not APIHelper.SKIP:
            self.settlement_date = settlement_date 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        clearing_channel = dictionary.get("clearing_channel") if dictionary.get("clearing_channel") else APIHelper.SKIP
        references = None
        if dictionary.get('references') is not None:
            references = [Reference.from_dictionary(x) for x in dictionary.get('references')]
        else:
            references = APIHelper.SKIP
        settlement_date = dateutil.parser.parse(dictionary.get('settlement_date')).date() if dictionary.get('settlement_date') else APIHelper.SKIP
        # Return an object of this model
        return cls(clearing_channel,
                   references,
                   settlement_date)
