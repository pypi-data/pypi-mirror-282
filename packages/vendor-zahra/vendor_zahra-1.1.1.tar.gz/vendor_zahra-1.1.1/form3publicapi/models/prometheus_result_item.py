# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class PrometheusResultItem(object):

    """Implementation of the 'prometheusResultItem' model.

    TODO: type model description here.

    Attributes:
        metric (Dict[str, str]): TODO: type description here.
        value (List[object]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "metric": 'metric',
        "value": 'value'
    }

    _optionals = [
        'metric',
        'value',
    ]

    def __init__(self,
                 metric=APIHelper.SKIP,
                 value=APIHelper.SKIP):
        """Constructor for the PrometheusResultItem class"""

        # Initialize members of the class
        if metric is not APIHelper.SKIP:
            self.metric = metric 
        if value is not APIHelper.SKIP:
            self.value = value 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        metric = dictionary.get("metric") if dictionary.get("metric") else APIHelper.SKIP
        value = dictionary.get("value") if dictionary.get("value") else APIHelper.SKIP
        # Return an object of this model
        return cls(metric,
                   value)
