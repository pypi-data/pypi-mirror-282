# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class Attributes26(object):

    """Implementation of the 'Attributes26' model.

    TODO: type model description here.

    Attributes:
        admission_datetime (datetime): TODO: type description here.
        source_gateway (str): TODO: type description here.
        status (DirectDebitDecisionAdmissionStatusEnum): TODO: type
            description here.
        status_reason (DirectDebitDecisionAdmissionStatusReasonEnum): TODO:
            type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "admission_datetime": 'admission_datetime',
        "source_gateway": 'source_gateway',
        "status": 'status',
        "status_reason": 'status_reason'
    }

    _optionals = [
        'admission_datetime',
        'source_gateway',
        'status',
        'status_reason',
    ]

    def __init__(self,
                 admission_datetime=APIHelper.SKIP,
                 source_gateway=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 status_reason=APIHelper.SKIP):
        """Constructor for the Attributes26 class"""

        # Initialize members of the class
        if admission_datetime is not APIHelper.SKIP:
            self.admission_datetime = APIHelper.apply_datetime_converter(admission_datetime, APIHelper.RFC3339DateTime) if admission_datetime else None 
        if source_gateway is not APIHelper.SKIP:
            self.source_gateway = source_gateway 
        if status is not APIHelper.SKIP:
            self.status = status 
        if status_reason is not APIHelper.SKIP:
            self.status_reason = status_reason 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        admission_datetime = APIHelper.RFC3339DateTime.from_value(dictionary.get("admission_datetime")).datetime if dictionary.get("admission_datetime") else APIHelper.SKIP
        source_gateway = dictionary.get("source_gateway") if dictionary.get("source_gateway") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        status_reason = dictionary.get("status_reason") if dictionary.get("status_reason") else APIHelper.SKIP
        # Return an object of this model
        return cls(admission_datetime,
                   source_gateway,
                   status,
                   status_reason)
