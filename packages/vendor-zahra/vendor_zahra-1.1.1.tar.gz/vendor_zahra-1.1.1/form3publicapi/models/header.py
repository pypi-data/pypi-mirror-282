# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class Header(object):

    """Implementation of the 'Header' model.

    TODO: type model description here.

    Attributes:
        destination (str): Destination SWIFT logical terminal address.
            Complete 12-character SWIFT destination, including BIC (x8),
            logical terminal code (x1) and branch code (x).
        message_type (str): The message type of the SWIFT payment, has to
            match `[A-Z]{2}[0-9]{3}`. Currently `MT103` is the only supported
            value
        priority (str): SWIFT priority. Either `Normal` or `Priority`.
        recipient (str): The destination SWIFT BIC for SWIFT MT messages being
            sent by Form3 client to SWIFT. Formatted as BIC8 or BIC11.
        source (str): The source SWIFT BIC for SWIFT MT messages being
            received by Form3 client from SWIFT. Formatted as BIC8 or BIC11.
        user_reference (str): Message User Reference (MUR) value, which can be
            up to 16 characters, and will be returned in the ACK

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "destination": 'destination',
        "message_type": 'message_type',
        "priority": 'priority',
        "recipient": 'recipient',
        "source": 'source',
        "user_reference": 'user_reference'
    }

    _optionals = [
        'destination',
        'message_type',
        'priority',
        'recipient',
        'source',
        'user_reference',
    ]

    def __init__(self,
                 destination=APIHelper.SKIP,
                 message_type=APIHelper.SKIP,
                 priority=APIHelper.SKIP,
                 recipient=APIHelper.SKIP,
                 source=APIHelper.SKIP,
                 user_reference=APIHelper.SKIP):
        """Constructor for the Header class"""

        # Initialize members of the class
        if destination is not APIHelper.SKIP:
            self.destination = destination 
        if message_type is not APIHelper.SKIP:
            self.message_type = message_type 
        if priority is not APIHelper.SKIP:
            self.priority = priority 
        if recipient is not APIHelper.SKIP:
            self.recipient = recipient 
        if source is not APIHelper.SKIP:
            self.source = source 
        if user_reference is not APIHelper.SKIP:
            self.user_reference = user_reference 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        destination = dictionary.get("destination") if dictionary.get("destination") else APIHelper.SKIP
        message_type = dictionary.get("message_type") if dictionary.get("message_type") else APIHelper.SKIP
        priority = dictionary.get("priority") if dictionary.get("priority") else APIHelper.SKIP
        recipient = dictionary.get("recipient") if dictionary.get("recipient") else APIHelper.SKIP
        source = dictionary.get("source") if dictionary.get("source") else APIHelper.SKIP
        user_reference = dictionary.get("user_reference") if dictionary.get("user_reference") else APIHelper.SKIP
        # Return an object of this model
        return cls(destination,
                   message_type,
                   priority,
                   recipient,
                   source,
                   user_reference)
