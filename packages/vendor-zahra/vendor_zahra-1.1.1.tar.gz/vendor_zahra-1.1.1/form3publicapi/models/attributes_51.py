# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class Attributes51(object):

    """Implementation of the 'Attributes51' model.

    TODO: type model description here.

    Attributes:
        reason (str): Further explanation of the reason given in reason_code.
            Only evaluated for certain reason codes.
        reason_code (str): The reason for the recall. Has to be a valid
            [recall reason
            code](http://api-docs.form3.tech/api.html#enumerations-recall-reaso
            n-codes).

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reason": 'reason',
        "reason_code": 'reason_code'
    }

    _optionals = [
        'reason',
        'reason_code',
    ]

    def __init__(self,
                 reason=APIHelper.SKIP,
                 reason_code=APIHelper.SKIP):
        """Constructor for the Attributes51 class"""

        # Initialize members of the class
        if reason is not APIHelper.SKIP:
            self.reason = reason 
        if reason_code is not APIHelper.SKIP:
            self.reason_code = reason_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        reason = dictionary.get("reason") if dictionary.get("reason") else APIHelper.SKIP
        reason_code = dictionary.get("reason_code") if dictionary.get("reason_code") else APIHelper.SKIP
        # Return an object of this model
        return cls(reason,
                   reason_code)
