# -*- coding: utf-8 -*-

"""
form3publicapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from form3publicapi.api_helper import APIHelper


class AccountEventAttributes(object):

    """Implementation of the 'AccountEventAttributes' model.

    TODO: type model description here.

    Attributes:
        account_id (uuid|str): ID of the account this event relates to
        date_time (datetime): TODO: type description here.
        description (DescriptionEnum): Contains the event description
        reason (str): Failure reason. Should only be present when description
            is failed
        routing_status (RoutingStatusEnum): Contains the routing status
        status (Status2Enum): Contains the event status

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_id": 'account_id',
        "date_time": 'date_time',
        "routing_status": 'routing_status',
        "status": 'status',
        "description": 'description',
        "reason": 'reason'
    }

    _optionals = [
        'description',
        'reason',
    ]

    def __init__(self,
                 account_id=None,
                 date_time=None,
                 routing_status=None,
                 status=None,
                 description=APIHelper.SKIP,
                 reason=APIHelper.SKIP):
        """Constructor for the AccountEventAttributes class"""

        # Initialize members of the class
        self.account_id = account_id 
        self.date_time = APIHelper.apply_datetime_converter(date_time, APIHelper.RFC3339DateTime) if date_time else None 
        if description is not APIHelper.SKIP:
            self.description = description 
        if reason is not APIHelper.SKIP:
            self.reason = reason 
        self.routing_status = routing_status 
        self.status = status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        account_id = dictionary.get("account_id") if dictionary.get("account_id") else None
        date_time = APIHelper.RFC3339DateTime.from_value(dictionary.get("date_time")).datetime if dictionary.get("date_time") else None
        routing_status = dictionary.get("routing_status") if dictionary.get("routing_status") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        reason = dictionary.get("reason") if dictionary.get("reason") else APIHelper.SKIP
        # Return an object of this model
        return cls(account_id,
                   date_time,
                   routing_status,
                   status,
                   description,
                   reason)
