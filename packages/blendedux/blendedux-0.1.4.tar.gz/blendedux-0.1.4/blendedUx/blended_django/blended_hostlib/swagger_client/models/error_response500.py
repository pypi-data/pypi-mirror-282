# coding: utf-8

"""
    Swagger Blended Hub API Explorer

    A collection of Swagger documentation for the Blended Hub APIs.

    OpenAPI spec version: 1.0.0
    Contact: api@blended.co
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ErrorResponse500(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, status_code=None, message=None, package_detail_data=None, redirect_url=None):
        """
        ErrorResponse500 - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'status_code': 'int',
            'message': 'str',
            'package_detail_data': 'object',
            'redirect_url': 'str'
        }

        self.attribute_map = {
            'status_code': 'status_code',
            'message': 'message',
            'package_detail_data': 'packageDetailData',
            'redirect_url': 'redirect_url'
        }

        self._status_code = status_code
        self._message = message
        self._package_detail_data = package_detail_data
        self._redirect_url = redirect_url

    @property
    def status_code(self):
        """
        Gets the status_code of this ErrorResponse500.
        Error Custom status code.

        :return: The status_code of this ErrorResponse500.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """
        Sets the status_code of this ErrorResponse500.
        Error Custom status code.

        :param status_code: The status_code of this ErrorResponse500.
        :type: int
        """

        self._status_code = status_code

    @property
    def message(self):
        """
        Gets the message of this ErrorResponse500.
        error message.

        :return: The message of this ErrorResponse500.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """
        Sets the message of this ErrorResponse500.
        error message.

        :param message: The message of this ErrorResponse500.
        :type: str
        """

        self._message = message

    @property
    def package_detail_data(self):
        """
        Gets the package_detail_data of this ErrorResponse500.
        details of the package.

        :return: The package_detail_data of this ErrorResponse500.
        :rtype: object
        """
        return self._package_detail_data

    @package_detail_data.setter
    def package_detail_data(self, package_detail_data):
        """
        Sets the package_detail_data of this ErrorResponse500.
        details of the package.

        :param package_detail_data: The package_detail_data of this ErrorResponse500.
        :type: object
        """

        self._package_detail_data = package_detail_data

    @property
    def redirect_url(self):
        """
        Gets the redirect_url of this ErrorResponse500.
        url if redirection to website is needed at all.

        :return: The redirect_url of this ErrorResponse500.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """
        Sets the redirect_url of this ErrorResponse500.
        url if redirection to website is needed at all.

        :param redirect_url: The redirect_url of this ErrorResponse500.
        :type: str
        """

        self._redirect_url = redirect_url

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
