Metadata-Version: 2.1
Name: endaq
Version: 1.5.3
Summary: A comprehensive, user-centric Python API for working with enDAQ data and devices
Home-page: https://github.com/MideTechnology/endaq-python
Author: Mide Technology
Author-email: help@mide.com
License: MIT
Project-URL: Bug Tracker, https://github.com/MideTechnology/endaq-python/issues
Project-URL: Documentation, https://docs.endaq.com/en/latest/
Project-URL: Source Code, https://github.com/MideTechnology/endaq-python/tree/main
Keywords: ebml binary ide mide endaq
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: backports.cached-property; python_version < "3.8"
Requires-Dist: ebmlite>=3.2.0
Requires-Dist: idelib>=3.2.8
Requires-Dist: jinja2
Requires-Dist: numpy>=1.19.5
Requires-Dist: pandas>=1.3
Requires-Dist: plotly>=5.3.1
Requires-Dist: pynmeagps
Requires-Dist: python-dotenv>=0.18.0
Requires-Dist: requests>=2.25.1
Requires-Dist: scipy>=1.7.1
Requires-Dist: pint>=0.18
Provides-Extra: test
Requires-Dist: backports.cached-property; python_version < "3.8" and extra == "test"
Requires-Dist: ebmlite>=3.2.0; extra == "test"
Requires-Dist: idelib>=3.2.8; extra == "test"
Requires-Dist: jinja2; extra == "test"
Requires-Dist: numpy>=1.19.5; extra == "test"
Requires-Dist: pandas>=1.3; extra == "test"
Requires-Dist: plotly>=5.3.1; extra == "test"
Requires-Dist: pynmeagps; extra == "test"
Requires-Dist: python-dotenv>=0.18.0; extra == "test"
Requires-Dist: requests>=2.25.1; extra == "test"
Requires-Dist: scipy>=1.7.1; extra == "test"
Requires-Dist: pint>=0.18; extra == "test"
Requires-Dist: hypothesis==6.41.0; extra == "test"
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: pytest-xdist[psutil]; extra == "test"
Requires-Dist: sympy; extra == "test"
Provides-Extra: docs
Requires-Dist: backports.cached-property; python_version < "3.8" and extra == "docs"
Requires-Dist: ebmlite>=3.2.0; extra == "docs"
Requires-Dist: idelib>=3.2.8; extra == "docs"
Requires-Dist: jinja2; extra == "docs"
Requires-Dist: numpy>=1.19.5; extra == "docs"
Requires-Dist: pandas>=1.3; extra == "docs"
Requires-Dist: plotly>=5.3.1; extra == "docs"
Requires-Dist: pynmeagps; extra == "docs"
Requires-Dist: python-dotenv>=0.18.0; extra == "docs"
Requires-Dist: requests>=2.25.1; extra == "docs"
Requires-Dist: scipy>=1.7.1; extra == "docs"
Requires-Dist: pint>=0.18; extra == "docs"
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: pydata-sphinx-theme; extra == "docs"
Requires-Dist: sphinx-plotly-directive; extra == "docs"
Requires-Dist: sphinxcontrib-spelling; extra == "docs"
Requires-Dist: nbsphinx; extra == "docs"
Provides-Extra: example
Requires-Dist: backports.cached-property; python_version < "3.8" and extra == "example"
Requires-Dist: ebmlite>=3.2.0; extra == "example"
Requires-Dist: idelib>=3.2.8; extra == "example"
Requires-Dist: jinja2; extra == "example"
Requires-Dist: numpy>=1.19.5; extra == "example"
Requires-Dist: pandas>=1.3; extra == "example"
Requires-Dist: plotly>=5.3.1; extra == "example"
Requires-Dist: pynmeagps; extra == "example"
Requires-Dist: python-dotenv>=0.18.0; extra == "example"
Requires-Dist: requests>=2.25.1; extra == "example"
Requires-Dist: scipy>=1.7.1; extra == "example"
Requires-Dist: pint>=0.18; extra == "example"

[![PyPI Latest Release](https://img.shields.io/pypi/v/endaq.svg)](https://pypi.org/project/endaq/) ![example workflow](https://github.com/MideTechnology/endaq-python/actions/workflows/unit-tests.yml/badge.svg)

# `endaq-python`: A comprehensive, user-centric Python API for working with enDAQ data and devices


## Installation

endaq is available on PYPI via `pip`:

    pip install endaq

For the most recent features that are still under development, you can also use `pip` to install endaq directly from GitHub:

    pip install git+https://github.com/MideTechnology/endaq-python.git@development

## Contents

This package consists of several submodules, you can read more about how these are used in their respective readme files:
* `endaq.calc` ([readme](https://github.com/MideTechnology/endaq-python/tree/main/endaq/calc)): A computational backend for vibration analysis.
* `endaq.cloud` ([readme](https://github.com/MideTechnology/endaq-python/tree/main/endaq/cloud)): Tools for interacting with enDAQ Cloud services.
* `endaq.ide` ([readme](https://github.com/MideTechnology/endaq-python/tree/main/endaq/ide)): High-level utility functions to aid in importing and inspecting enDAQ IDE recording files.
* `endaq.plot` ([readme](https://github.com/MideTechnology/endaq-python/tree/main/endaq/plot)):  A package comprising a collection of plotting utilities for sensor data analysis.

## Docs

The docs for this package can be found [here](https://docs.endaq.com/en/latest/).

To locally build the [Sphinx](https://www.sphinx-doc.org) documentation from a clone of the repo:
1. `cd <repo root dir>`
2. `pip install -e .[docs]`
3. `sphinx-build -W -b html docs docs/_build`

## License 

The endaq-python repository is licensed under the MIT license. The full text can be found in the [LICENSE file](https://github.com/MideTechnology/endaq-python/blob/main/LICENSE).
