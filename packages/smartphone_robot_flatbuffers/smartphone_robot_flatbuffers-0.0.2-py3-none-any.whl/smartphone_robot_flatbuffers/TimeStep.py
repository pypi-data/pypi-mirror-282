# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbclasses

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TimeStep(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TimeStep()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTimeStep(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TimeStep
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TimeStep
    def WheelData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.WheelData import WheelData
            obj = WheelData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeStep
    def OrientationData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.OrientationData import OrientationData
            obj = OrientationData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeStep
    def ChargerData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.ChargerData import ChargerData
            obj = ChargerData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeStep
    def BatteryData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.BatteryData import BatteryData
            obj = BatteryData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeStep
    def ImageData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.ImageData import ImageData
            obj = ImageData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeStep
    def SoundData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.SoundData import SoundData
            obj = SoundData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeStep
    def Actions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from jp.oist.abcvlib.core.learning.fbclasses.RobotAction import RobotAction
            obj = RobotAction()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(7)
def TimeStepStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddWheelData(builder, wheelData): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(wheelData), 0)
def TimeStepAddWheelData(builder, wheelData):
    """This method is deprecated. Please switch to AddWheelData."""
    return AddWheelData(builder, wheelData)
def AddOrientationData(builder, orientationData): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(orientationData), 0)
def TimeStepAddOrientationData(builder, orientationData):
    """This method is deprecated. Please switch to AddOrientationData."""
    return AddOrientationData(builder, orientationData)
def AddChargerData(builder, chargerData): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(chargerData), 0)
def TimeStepAddChargerData(builder, chargerData):
    """This method is deprecated. Please switch to AddChargerData."""
    return AddChargerData(builder, chargerData)
def AddBatteryData(builder, batteryData): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(batteryData), 0)
def TimeStepAddBatteryData(builder, batteryData):
    """This method is deprecated. Please switch to AddBatteryData."""
    return AddBatteryData(builder, batteryData)
def AddImageData(builder, imageData): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(imageData), 0)
def TimeStepAddImageData(builder, imageData):
    """This method is deprecated. Please switch to AddImageData."""
    return AddImageData(builder, imageData)
def AddSoundData(builder, soundData): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(soundData), 0)
def TimeStepAddSoundData(builder, soundData):
    """This method is deprecated. Please switch to AddSoundData."""
    return AddSoundData(builder, soundData)
def AddActions(builder, actions): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(actions), 0)
def TimeStepAddActions(builder, actions):
    """This method is deprecated. Please switch to AddActions."""
    return AddActions(builder, actions)
def End(builder): return builder.EndObject()
def TimeStepEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)