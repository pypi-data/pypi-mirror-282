Metadata-Version: 2.1
Name: fetchai-babble
Version: 0.4.2
Summary: A simple python library for interacting with the Fetch.ai messaging service (called Memorandum)
License: Apache 2.0
Author: Fetch.AI Limited
Requires-Python: >=3.9,<3.13
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: bech32 (>=1.2.0,<2.0.0)
Requires-Dist: ecdsa (>=0.19.0,<0.20.0)
Requires-Dist: eciespy (>=0.4.2,<0.5.0)
Requires-Dist: pycryptodome (>=3.20.0,<4.0.0)
Requires-Dist: pydantic (>=2.8.0,<3.0.0)
Requires-Dist: pyjwt (>=2.8.0,<3.0.0)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Description-Content-Type: text/markdown

[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)

# Babble

A simple python library for interacting with the Fetch.ai messaging service (called Memorandum)

## Quick Example

```python
from babble import Client, Identity

# create a set of agents with random identities
client1 = Client('agent1.....', Identity.generate())
client2 = Client('agent1.....', Identity.generate())

# send a message from one client to another
client1.send(client2.delegate_address, "why hello there")

# receive the messages from the other client
for msg in client2.receive():
    print(msg.text)
```

## Developing

**Install dependencies**

    poetry install

**Run examples**

    poetry run ./examples/simple-e2e.py

**Run tests**

    poetry run pytest

**Run formatter**

    poetry run ruff check --fix && ruff format

