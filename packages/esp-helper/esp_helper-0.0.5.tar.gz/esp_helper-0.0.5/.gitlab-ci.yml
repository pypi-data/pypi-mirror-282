stages:
  - test
  - version
  - build

run-tests:
  stage: test
  image: python:3.12
  before_script:
    - pip install -r requirements.txt
  script:
    - python -m unittest discover -s tests

bump-version:
  stage: version
  image: cicirello/pyaction
  before_script:
    - pip install bump2version build twine
  script:
    - |
      git remote set-url origin https://oauth2:$CI_WRITE_TOKEN@gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.git
      git config --global user.email "$GITLAB_USER_EMAIL"
      git config --global user.name "$GITLAB_USER_NAME"
      git checkout $CI_COMMIT_REF_NAME
      
      COMMIT_MSG_LOWER=$(echo "$CI_COMMIT_MESSAGE" | tr '[:upper:]' '[:lower:]')
      echo $COMMIT_MSG_LOWER
      
      if [[ "$COMMIT_MSG_LOWER" == *"major"* || "$COMMIT_MSG_LOWER" == *"breaking"* ]]; then
        bumpversion --no-commit major
      elif [[ "$COMMIT_MSG_LOWER" == *"minor"* || "$COMMIT_MSG_LOWER" == *"feat"* ]]; then
        bumpversion --no-commit minor
      elif [[ "$COMMIT_MSG_LOWER" == *"patch"* || "$COMMIT_MSG_LOWER" == *"fix"* || "$COMMIT_MSG_LOWER" == *"nit"* ]]; then
        bumpversion --no-commit patch
      else
        echo "No version bump needed."
        exit 0
      fi
      
      git add .
      git commit -m "Bump version based on commit message: $CI_COMMIT_MESSAGE"
      git push -o ci.skip origin $CI_COMMIT_REF_NAME
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  artifacts:
    paths:
      - .

build-and-publish:
  stage: build
  image: python:3.12
  dependencies:
    - bump-version
  script:
    - pip install build twine
    - python -m build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/* --verbose
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

publish-pypi:
  stage: build
  image: python:latest
  when: manual
  dependencies:
    - build-and-publish
  script:
    - twine upload dist/*