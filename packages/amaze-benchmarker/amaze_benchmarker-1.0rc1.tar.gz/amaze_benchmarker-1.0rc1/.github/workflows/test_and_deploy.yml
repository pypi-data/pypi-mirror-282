name: Auto-Publish

# Build on every branch push, tag push, and pull request change:
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build_wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    env:
      # Display must be available globally for linux to know where xvfb is
      DISPLAY: ":99.0"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Copied from https://stackoverflow.com/a/77480795/5946661
      - name: Setup xvfb (Linux)
        if: runner.os == 'Linux'
        run: |
          # Stuff copied wildly from several stackoverflow posts
          # sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 libxcb-shape0 libglib2.0-0 libgl1-mesa-dev
          # sudo apt-get install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
          sudo apt-get install -y libxcb-xinerama0 pyqt5-dev-tools
          # start xvfb in the background
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

      - name: Test
        shell: bash --noprofile --norc {0} # No automatic fail-fast
        run: |
          mkdir logs
          log=logs/wheel.log
          pip install --upgrade pip
          pip install .[tests]
          ./commands.sh --no-venv \
            pytest --small-scale | tee $log
          res=${PIPESTATUS[0]}
          echo "[kgd-build-status] $res" >> $log
          exit $res
          
      - name: Build wheel
        run: |
          pipx run build --wheel 2>&1 | tee logs/wheel.log
          find -name '*.whl'
          exit ${PIPESTATUS[0]}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-wheel
          path: ./dist/*.whl

      - uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: log-wheel
          path: ./logs/*.log

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: |
          mkdir logs
          pipx run build --sdist 2>&1 | tee logs/sdist.log
          exit ${PIPESTATUS[0]}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-sources
          path: dist/*.tar.gz

      - uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: log-sources
          path: ./logs/*.log

  post_build:
    needs: [build_wheel, build_sdist]
    name: Post-build processing
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    if: ${{ always() && !cancelled() }}
    steps:
      - uses: actions/download-artifact@v4
        name: download sdist/wheels
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true
          
      - uses: actions/download-artifact@v4
        name: download logs
        with:
          path: logs
          pattern: log-*
          merge-multiple: true

      - name: upload to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: always()
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

      - name: upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: "github.ref_name == 'main' && contains(github.event.head_commit.message, '[Release')"
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
