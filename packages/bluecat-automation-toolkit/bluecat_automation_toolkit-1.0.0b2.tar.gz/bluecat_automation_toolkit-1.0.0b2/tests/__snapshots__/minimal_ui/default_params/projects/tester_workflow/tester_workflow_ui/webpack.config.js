/*
Copyright 3000 Test Tester. All rights reserved.

This file was generated by BlueCat Automation Toolkit (BATK).
Portions which reproduce template contents from BATK are Copyright 2023 BlueCat Networks Inc.
Other contents are owned by their authors.
 */
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = [
    {
        entry: {
            testerWorkflow: './src/pages/testerWorkflow/index.js',
        },
        output: {
            path: path.join(__dirname, '../../../workspace/workflows/tester_workflow/'),
            publicPath: '/tester_workflow/',
            filename: 'js/[name].js',
            assetModuleFilename: 'img/[name][ext]',
        },
        mode: process.env.NODE_ENV || 'development',
        resolve: {
            modules: [path.resolve(__dirname, 'src'), 'node_modules'],
            alias: {
                react: 'preact/compat',
                'react-dom': 'preact/compat',
            },
        },
        devServer: {
            proxy: {
                '/': {
                    target: 'http://localhost:8001',
                },
            },
            static: path.join(__dirname, 'src'),
        },
        module: {
            rules: [
                {
                    test: /\.m?js$/,
                    resolve: {
                        fullySpecified: false,
                    },
                    exclude: /(node_modules|bower_components)/,
                    use: ['babel-loader'],
                },
                {
                    test: /\.(css|scss)$/,
                    use: ['style-loader', 'css-loader'],
                },
                {
                    test: /\.less$/,
                    use: [
                        'style-loader',
                        'css-loader',
                        {
                            loader: 'less-loader',
                        },
                    ],
                },
                {
                    test: /\.(svg|png)$/,
                    type: 'asset/resource',
                },
                {
                    test: /\.(woff|woff2)$/,
                    type: 'asset/resource',
                    generator: {
                        filename: 'fonts/[hash][ext]',
                    },
                },
            ],
        },
        plugins: [
            new HtmlWebpackPlugin({
                template: path.join(__dirname, 'src', 'index.html'),
                filename: 'html/testerWorkflow/index.html',
                chunks: ['testerWorkflow'],
            }),
        ],
    },
];
