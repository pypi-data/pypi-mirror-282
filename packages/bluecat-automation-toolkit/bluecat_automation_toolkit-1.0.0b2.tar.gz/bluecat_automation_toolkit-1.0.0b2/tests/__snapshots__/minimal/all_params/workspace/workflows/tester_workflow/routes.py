# Copyright 3000 Test Tester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file was generated by BlueCat Automation Toolkit (BATK).
# Portions which reproduce template contents from BATK are Copyright 2023 BlueCat Networks Inc.
# Other contents are owned by their authors.
"""Routes and back-end implementation of workflow "tester_workflow"."""
from pathlib import Path

from flask import g, jsonify, request, render_template, send_from_directory

from bluecat.gateway.decorators import (
    api_exc_handler,
    page_exc_handler,
    require_permission,
)
from bluecat.util import no_cache

from .base import bp


@bp.route("/")
@page_exc_handler(default_message='Failed to load page "A title for an HTML link".')
@require_permission("test_permission")
def page():
    """
    Render page "A title for an HTML link".

    :return: Response with the page's HTML.
    """
    # You may return the contents of a static file.
    # return send_from_directory(
    #     Path(__file__).parent, "html/testerWorkflow/index.html"
    # )

    # You may render a Jinja template.
    # return render_template("tester_workflow.html")

    # The following is a placeholder response. Replace it with your implementation.
    return f"""\
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>501: Not Implemented</title>
    </head>
    <body>
        <h1>Empty page for {request.method} {request.path}</h1>
        <h2>This page currently does nothing. Replace the implementation of this page with your own.</h2>
    </body>
</html>
""", 501


@bp.route("/", methods=["POST"])
@no_cache
@api_exc_handler(default_message="Failed to perform the action.")
@require_permission("test_permission")
def api_post_tester_workflow():
    """
    Perform an action based on the provided parameters.
    """
    # Validate the parameters.

    # Perform the action.

    # Respond with success.
    return {
        "message": "Operation successfully completed.",
    }
