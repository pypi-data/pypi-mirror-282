/*
This file was generated by BlueCat Automation Toolkit (BATK).
Portions which reproduce template contents from BATK are Copyright 2023 BlueCat Networks Inc.
Other contents are owned by their authors.
 */
import { useCallback, useMemo } from 'react';

export default (values, setError, errorText, disable) => {
    const names = useMemo(
        () => values.map(({ id, name }) => ({ id, name: name })),
        [values],
    );
    return useCallback(
        (text) => {
            if (disable) {
                return [];
            }

            const textLower = text.toLowerCase();
            const suggestions = names.filter(({ name }) =>
                name.toLowerCase().includes(textLower)
            );
            if (!suggestions.length) {
                setError(errorText);
                return suggestions;
            }

            return suggestions
                .sort((a, b) => {
                    const an = a.name;
                    const bn = b.name;
                    const as = an.toLowerCase().startsWith(textLower);
                    const bs = bn.toLowerCase().startsWith(textLower);
                    return bs - as || an.localeCompare(bn);
                })
                .map(({ id, name }) => ({ id, name }));
        },
        [names, values, setError, errorText, disable],
    );
};