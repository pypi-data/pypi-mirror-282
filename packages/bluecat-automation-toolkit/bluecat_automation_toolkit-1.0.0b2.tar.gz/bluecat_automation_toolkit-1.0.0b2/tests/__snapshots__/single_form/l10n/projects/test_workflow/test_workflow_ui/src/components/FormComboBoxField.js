/*
This file was generated by BlueCat Automation Toolkit (BATK).
Portions which reproduce template contents from BATK are Copyright 2023 BlueCat Networks Inc.
Other contents are owned by their authors.
 */
import { useCallback } from 'react';
import { ComboBox, FieldError, LabelLine, renderSuggestion } from '@bluecateng/pelagos';
import { useFormField } from '@bluecateng/auto-forms';
import useObjectSuggestions from '../hooks/useObjectSuggestions';
import './FormComboBoxField.less';

const FormComboBoxField = ({
    id,
    name,
    className,
    label,
    required,
    values,
    noMatchText,
    ...props
}) => {
    const labelId = `${id}-label`;
    const errorId = `${id}-error`;
    const { value, error, extra, setValue, setError, setExtra } = useFormField(name);
    const handleGetSuggestions = useObjectSuggestions(values, setError, noMatchText, !extra);
    const handleChange = useCallback(
        (object) => (setValue(object), setError(null), setExtra(null)),
        [setValue, setError, setExtra],
    );
    const handleTextChange = useCallback(
        (text) => (setValue(null), setError(null), setExtra(text)),
        [setValue, setError, setExtra],
    );
    return (
        <div className={`FormComboBoxField${className ? ` ${className}` : ''}`}>
            <LabelLine id={labelId} text={label} required={required} error={!!error} />
            <ComboBox
                {...props}
                id={id}
                autoSelect
                text={extra ?? value?.name ?? ''}
                error={!!error}
                aria-labelledby={labelId}
                aria-required={required}
                getSuggestions={handleGetSuggestions}
                renderSuggestion={renderSuggestion}
                onChange={handleChange}
                onTextChange={handleTextChange}
            />
            <FieldError id={errorId} text={error} />
        </div>
    );
};

export default FormComboBoxField;