__all__ = [
    'BaseLayoutV1',
    'BarsLayoutV1',
    'ColumnsLayoutV1',
    'CompareLayoutItem',
    'CompareLayoutV1',
    'SideBySideLayoutV1',
    'SidebarLayoutV1',
]
import toloka.client.project.template_builder.base
import toloka.util._extendable_enum
import typing


class BaseLayoutV1Metaclass(toloka.client.project.template_builder.base.VersionedBaseComponentMetaclass):
    @staticmethod
    def __new__(
        mcs,
        name,
        bases,
        namespace,
        **kwargs
    ): ...


class BaseLayoutV1(toloka.client.project.template_builder.base.BaseComponent, metaclass=BaseLayoutV1Metaclass):
    """A base component for layouts.

    Layout components are used for positioning elements in the interface, such as in columns or side-by-side.

    Attributes:
        validation: Validation rules.
    """

    def __init__(
        self,
        *,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class BaseLayoutV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]


class BarsLayoutV1(BaseLayoutV1):
    """A layout with top and bottom bars.

    For more information, see [layout.bars](https://toloka.ai/docs/template-builder/reference/layout.bars).

    Attributes:
        content: The main content.
        bar_after: The bar displayed below the main content.
        bar_before: The bar displayed above the main content.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        bar_after: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        bar_before: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class BarsLayoutV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    bar_after: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    bar_before: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]


class ColumnsLayoutV1(BaseLayoutV1):
    """A layout with columns.

    For more information, see [layout.columns](https://toloka.ai/docs/template-builder/reference/layout.columns).

    Attributes:
        items: A list of components. Every component is placed in an individual column.
        full_height: A height mode:
            * `True` — The component occupies all available vertical space. Columns have individual scrolling.
            * `False` — The height of the component is determined by the highest column.
        min_width: The minimum width of the component when columns are used. If the component is narrower than `min_width`, then all content is shown in one column.
        ratio: A list of relative column widths.
        vertical_align: The vertical alignment of column content.
        validation: Validation rules.
    """

    class VerticalAlign(toloka.util._extendable_enum.ExtendableStrEnum):
        """The vertical alignment of column content.

        Attributes:
            TOP: Aligning to the top of a column.
            MIDDLE: Aligning to the middle of the highest.
            BOTTOM: Aligning to the bottom of a column.
        """

        BOTTOM = 'bottom'
        MIDDLE = 'middle'
        TOP = 'top'

    def __init__(
        self,
        items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]] = None,
        *,
        full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]] = None,
        vertical_align: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, VerticalAlign]] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class ColumnsLayoutV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]]
    full_height: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    ratio: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]]]
    vertical_align: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, VerticalAlign]]


class CompareLayoutItem(toloka.client.project.template_builder.base.BaseTemplate):
    """An item for the `CompareLayoutV1`.

    Attributes:
        content: The content of the item.
        controls: Item controls.
    """

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None
    ) -> None:
        """Method generated by attrs for class CompareLayoutItem.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]


class CompareLayoutV1(BaseLayoutV1):
    """A layout for comparing several items.

    For more information, see [layout.compare](https://toloka.ai/docs/template-builder/reference/layout.compare).

    Attributes:
        common_controls: A component containing common controls.
        items: A list of items to be compared.
        min_width: The minimum width of the component in pixels. Default value: `400`.
        wide_common_controls: * `True` — The common controls are stretched horizontally.
            * `False` — The common controls are centered.

            Default value: `False`.
        validation: Validation rules.
    """

    def __init__(
        self,
        common_controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, CompareLayoutItem]]]] = None,
        *,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        wide_common_controls: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class CompareLayoutV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    common_controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[typing.Union[toloka.client.project.template_builder.base.BaseComponent, CompareLayoutItem]]]]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    wide_common_controls: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, bool]]


class SideBySideLayoutV1(BaseLayoutV1):
    """A layout with several blocks of the same width on a single horizontal panel.

    For more information, see [layout.side-by-side](https://toloka.ai/docs/template-builder/reference/layout.side-by-side).

    Attributes:
        controls: A component with controls.
        items: A list of blocks.
        min_item_width: The minimum width of a block, at least 400 pixels.
        validation: Validation rules.
    """

    def __init__(
        self,
        controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]] = None,
        *,
        min_item_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class SideBySideLayoutV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    items: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, typing.List[toloka.client.project.template_builder.base.BaseComponent]]]
    min_item_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]


class SidebarLayoutV1(BaseLayoutV1):
    """A layout with a main content block and a panel with controls.

    The component supports modes:
        * Widescreen — The control panel is placed to the right of the main block.
        * Compact — The controls are placed under the main block and stretch to the entire width.

    For more information, see [layout.sidebar](https://toloka.ai/docs/template-builder/reference/layout.sidebar).

    Attributes:
        content: The main block.
        controls: The control panel.
        controls_width: The width in pixels of the control panel in the widescreen mode.
            Default value: `200`.
        extra_controls: An additional panel with controls. It is placed below the controls.
        min_width: The minimum width in pixels of the component in a widescreen mode.
            If the component width is less than the specified value, the interface switches to the compact mode.
            Default value: `400`.
        validation: Validation rules.
    """

    def __init__(
        self,
        content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        *,
        controls_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        extra_controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]] = None,
        validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent] = None,
        version: typing.Optional[str] = '1.0.0'
    ) -> None:
        """Method generated by attrs for class SidebarLayoutV1.
        """
        ...

    _unexpected: typing.Optional[typing.Dict[str, typing.Any]]
    validation: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    version: typing.Optional[str]
    content: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    controls_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
    extra_controls: typing.Optional[toloka.client.project.template_builder.base.BaseComponent]
    min_width: typing.Optional[typing.Union[toloka.client.project.template_builder.base.BaseComponent, float]]
