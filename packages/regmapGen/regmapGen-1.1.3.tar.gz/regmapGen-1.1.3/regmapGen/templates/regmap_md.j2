{# MACRO #}
{#- generic range #}
{% macro range(msb, lsb) %}
    {% if msb == lsb %}
{{ msb }}
    {%- else %}
{{ msb }}:{{ lsb }}
    {%- endif %}
{%- endmacro %}

{#- bit field mode #}
{% macro mode(bf) %}
{{ bf.access }}
{%- endmacro %}

{#- value in hex format #}
{% macro literal(reset, width) %}
{{ "0x%0{w}x".format(w=width // 4) % reset }}
{%- endmacro %}

{#- TEMPLATE NAMESPACE #}
{% set tmp = namespace() %}

{#- TEMPLATE #}
# {{ title }}

Автоматически сгенерировано с помощью программы regmapGen.

{% if print_conventions %}
| Тип доступа | Описание                  |
| :---------- | :------------------------ |
| rw          | Read and Write            |
| rw1c        | Read and Write 1 to Clear |
| rw1s        | Read and Write 1 to Set   |
| ro          | Read Only                 |
| roc         | Read Only to Clear        |
| roll        | Read Only / Latch Low     |
| rolh        | Read Only / Latch High    |
| wo          | Write only                |
| wosc        | Write Only / Self Clear   |
{% endif %}

## **Регистры и команды**

**Базовый адрес**

{{ "0x%08x" % config['base_address'] }}

| Регистр                  | Адрес      | Описание    |
| :---                     | :---       | :---        |
{% for reg in rmap %}
{{ "| %-24s | %-10s | %s" % ("[%s](#%s)" % (reg.name, reg.name.lower()), literal(reg.address, config['address_width']), reg.description) }} |
{% endfor %}

{% for reg in rmap %}

\newpage

### **{{ reg.name }}**

**Описание**

{{ reg.description }}

**Смещение адреса**

{{ literal(reg.address, config['address_width']) }}

**Значение при сбросе**

{{ literal(reg.reset, config['data_width']) }}

{% if print_images %}
![]({{ image_dir }}/{{ reg.name.lower()}}.svg)
{% endif %}

| Поле             | Биты   | Тип             | Значение   | Описание    |
| :---             | :---   | :---            | :---       | :---        |
    {% set tmp.reserved_msb = config['data_width'] - 1 %}
    {% for bf in reg.bitfields[::-1] %}
        {% if tmp.reserved_msb > bf.msb %}
            {% set tmp.reserved_lsb = bf.msb + 1 %}
            {% set tmp.reserved_width = tmp.reserved_msb - tmp.reserved_lsb + 1 %}
{{ "| %-16s | %-6s | %-15s | %-10s | %s |" % ('-', range(tmp.reserved_msb, tmp.reserved_lsb), '-', literal(0, tmp.reserved_width), 'Reserved') }}
        {% endif %}
{{ "| %-16s | %-6s | %-15s | %-10s | %s |" % (bf.name, range(bf.msb, bf.lsb), mode(bf), literal(bf.reset, bf.width), bf.description) }}
        {% set tmp.reserved_msb = bf.lsb - 1 %}
    {% endfor %}
    {% for bf in reg %}
        {% if bf.enums %}

Enumerated значения для {{ reg.name }}.{{ bf.name }}.

| Enum             | Значение | Описание    |
| :---             | :---     | :---        |
            {% for enum in bf %}
{{ "| %-16s | %-6s | %s |" % (enum.name, literal(enum.value, bf.width), enum.description) }}
            {% endfor %}
        {% endif %}
    {% endfor %}
: *Таблица {{ loop.index }}* - Описание полей регистра {{ reg.name }}

{% endfor %}